APPROACH: PyGenProg
SUBJECT: middle_2

Test Cases Used:
  - (Enhanced) Fault Localization: 30 failing, 30 passing (Total: 60)
  - (Enhanced) Validation: 30 failing, 30 passing (Total: 60)

Execution Times:
  - Test Case Gathering: 0.8119 seconds
  - Repair: 309.7806 seconds
  - Evaluation: 48.5078 seconds

Results:
  - Valid Patch Found: False
  - Best Fitness: 0.9582
  - Best F1 Score: 0.8130
  - Total Patches Found: 19
  - Generations Completed: 10/10

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Sorted patches by descending fitness:

GeneticCandidate@tmp/middle_2(9)[0.96]
Found 19 equivalent patches.
Mutations: [Replace(2,9)]

---------- Evaluation Matrix ----------
STILL PASSING: [27/50]
NOW FAILING: [23/50]
NOW PASSING: [50/50]
STILL FAILING: [0/50]
PRECISION: 0.684931506849315
RECALL: 1.0
ACCURACY: 0.77
F1 SCORE: 0.8130081300813007
---------------------------------------
--- src/middle/__init__.py
+++ src/middle/__init__.py
@@ -1,12 +1,8 @@
 def middle(x, y, z):
     if y < z:
-        if x < y:
-            return y
-        elif x < z:
-            return y
-    else:
-        if x > y:
-            return y
-        elif x > z:
-            return x
-    return z
+        return x
+    elif x > y:
+        return y
+    elif x > z:
+        return x
+    return z

____________________________________________________________________________________________________

