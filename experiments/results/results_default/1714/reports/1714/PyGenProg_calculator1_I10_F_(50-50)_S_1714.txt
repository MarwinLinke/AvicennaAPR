APPROACH: PyGenProg
SUBJECT: calculator_1

Test Cases Used:
  - (Enhanced) Fault Localization: 50 failing, 50 passing (Total: 100)
  - (Baseline) Validation: 1 failing, 10 passing (Total: 11)

Execution Times:
  - Test Case Gathering: 1.0686 seconds
  - Repair: 210.4401 seconds
  - Evaluation: 74.4643 seconds

Results:
  - Valid Patch Found: False
  - Best Fitness: 0.0909
  - Best F1 Score: 0.0000
  - Total Patches Found: 14
  - Generations Completed: 10/10

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Sorted patches by descending fitness:

GeneticCandidate@tmp/calculator_1(11)[0.09]
Found 1 equivalent patches.
Mutations: [InsertBoth(6,19)]

---------- Evaluation Matrix ----------
STILL PASSING: [50/50]
NOW FAILING: [0/50]
NOW PASSING: [0/50]
STILL FAILING: [50/50]
PRECISION: 0.0
RECALL: 0.0
ACCURACY: 0.5
F1 SCORE: 0.0
---------------------------------------
--- src/calc/__init__.py
+++ src/calc/__init__.py
@@ -1,5 +1,3 @@
-#!/bin/python3
-
 """
 This file contains the code under test for the example bug.
 The sqrt() method fails on x <= 0.
@@ -8,9 +6,11 @@
 from math import sin as rsin
 from math import tan as rtan
 
-
 def sqrt(x):
     """Computes the square root of x, using the Newton-Raphson method"""
+
+    def main(arg):
+        return eval(arg)
     x = max(x, 0)
     approx = None
     guess = x / 2
@@ -19,18 +19,14 @@
         guess = (approx + x / approx) / 2
     return approx
 
-
 def tan(x):
     return rtan(x)
-
 
 def cos(x):
     return rcos(x)
 
-
 def sin(x):
     return rsin(x)
 
-
 def main(arg):
     return eval(arg)

____________________________________________________________________________________________________

GeneticCandidate@tmp/calculator_1(6)[0.09]
Found 1 equivalent patches.
Mutations: [InsertBoth(8,7)]

---------- Evaluation Matrix ----------
STILL PASSING: [50/50]
NOW FAILING: [0/50]
NOW PASSING: [0/50]
STILL FAILING: [50/50]
PRECISION: 0.0
RECALL: 0.0
ACCURACY: 0.5
F1 SCORE: 0.0
---------------------------------------
--- src/calc/__init__.py
+++ src/calc/__init__.py
@@ -1,5 +1,3 @@
-#!/bin/python3
-
 """
 This file contains the code under test for the example bug.
 The sqrt() method fails on x <= 0.
@@ -8,29 +6,25 @@
 from math import sin as rsin
 from math import tan as rtan
 
-
 def sqrt(x):
     """Computes the square root of x, using the Newton-Raphson method"""
     x = max(x, 0)
     approx = None
     guess = x / 2
+    approx = None
     while approx != guess:
         approx = guess
         guess = (approx + x / approx) / 2
     return approx
 
-
 def tan(x):
     return rtan(x)
-
 
 def cos(x):
     return rcos(x)
 
-
 def sin(x):
     return rsin(x)
 
-
 def main(arg):
     return eval(arg)

____________________________________________________________________________________________________

GeneticCandidate@tmp/calculator_1(8)[0.09]
Found 1 equivalent patches.
Mutations: [InsertBoth(3,17)]

---------- Evaluation Matrix ----------
STILL PASSING: [50/50]
NOW FAILING: [0/50]
NOW PASSING: [0/50]
STILL FAILING: [50/50]
PRECISION: 0.0
RECALL: 0.0
ACCURACY: 0.5
F1 SCORE: 0.0
---------------------------------------
--- src/calc/__init__.py
+++ src/calc/__init__.py
@@ -1,13 +1,13 @@
-#!/bin/python3
-
 """
 This file contains the code under test for the example bug.
 The sqrt() method fails on x <= 0.
 """
 from math import cos as rcos
 from math import sin as rsin
+
+def sin(x):
+    return rsin(x)
 from math import tan as rtan
-
 
 def sqrt(x):
     """Computes the square root of x, using the Newton-Raphson method"""
@@ -19,18 +19,14 @@
         guess = (approx + x / approx) / 2
     return approx
 
-
 def tan(x):
     return rtan(x)
-
 
 def cos(x):
     return rcos(x)
 
-
 def sin(x):
     return rsin(x)
 
-
 def main(arg):
     return eval(arg)

____________________________________________________________________________________________________

GeneticCandidate@tmp/calculator_1(6)[0.09]
Found 2 equivalent patches.
Mutations: [InsertBoth(9,7)]

---------- Evaluation Matrix ----------
STILL PASSING: [50/50]
NOW FAILING: [0/50]
NOW PASSING: [0/50]
STILL FAILING: [50/50]
PRECISION: 0.0
RECALL: 0.0
ACCURACY: 0.5
F1 SCORE: 0.0
---------------------------------------
--- src/calc/__init__.py
+++ src/calc/__init__.py
@@ -1,5 +1,3 @@
-#!/bin/python3
-
 """
 This file contains the code under test for the example bug.
 The sqrt() method fails on x <= 0.
@@ -8,29 +6,25 @@
 from math import sin as rsin
 from math import tan as rtan
 
-
 def sqrt(x):
     """Computes the square root of x, using the Newton-Raphson method"""
     x = max(x, 0)
     approx = None
     guess = x / 2
+    approx = None
     while approx != guess:
         approx = guess
         guess = (approx + x / approx) / 2
     return approx
 
-
 def tan(x):
     return rtan(x)
-
 
 def cos(x):
     return rcos(x)
 
-
 def sin(x):
     return rsin(x)
 
-
 def main(arg):
     return eval(arg)

____________________________________________________________________________________________________

GeneticCandidate@tmp/calculator_1(10)[0.09]
Found 1 equivalent patches.
Mutations: [InsertBoth(9,17)]

---------- Evaluation Matrix ----------
STILL PASSING: [50/50]
NOW FAILING: [0/50]
NOW PASSING: [0/50]
STILL FAILING: [50/50]
PRECISION: 0.0
RECALL: 0.0
ACCURACY: 0.5
F1 SCORE: 0.0
---------------------------------------
--- src/calc/__init__.py
+++ src/calc/__init__.py
@@ -1,5 +1,3 @@
-#!/bin/python3
-
 """
 This file contains the code under test for the example bug.
 The sqrt() method fails on x <= 0.
@@ -7,7 +5,6 @@
 from math import cos as rcos
 from math import sin as rsin
 from math import tan as rtan
-
 
 def sqrt(x):
     """Computes the square root of x, using the Newton-Raphson method"""
@@ -17,20 +14,19 @@
     while approx != guess:
         approx = guess
         guess = (approx + x / approx) / 2
+
+    def sin(x):
+        return rsin(x)
     return approx
-
 
 def tan(x):
     return rtan(x)
 
-
 def cos(x):
     return rcos(x)
-
 
 def sin(x):
     return rsin(x)
 
-
 def main(arg):
     return eval(arg)

____________________________________________________________________________________________________

GeneticCandidate@tmp/calculator_1(9)[0.09]
Found 1 equivalent patches.
Mutations: [InsertBoth(20,15)]

---------- Evaluation Matrix ----------
STILL PASSING: [50/50]
NOW FAILING: [0/50]
NOW PASSING: [0/50]
STILL FAILING: [50/50]
PRECISION: 0.0
RECALL: 0.0
ACCURACY: 0.5
F1 SCORE: 0.0
---------------------------------------
--- src/calc/__init__.py
+++ src/calc/__init__.py
@@ -1,5 +1,3 @@
-#!/bin/python3
-
 """
 This file contains the code under test for the example bug.
 The sqrt() method fails on x <= 0.
@@ -7,7 +5,6 @@
 from math import cos as rcos
 from math import sin as rsin
 from math import tan as rtan
-
 
 def sqrt(x):
     """Computes the square root of x, using the Newton-Raphson method"""
@@ -19,18 +16,17 @@
         guess = (approx + x / approx) / 2
     return approx
 
-
 def tan(x):
     return rtan(x)
-
 
 def cos(x):
     return rcos(x)
 
-
 def sin(x):
     return rsin(x)
 
+def main(arg):
 
-def main(arg):
+    def cos(x):
+        return rcos(x)
     return eval(arg)

____________________________________________________________________________________________________

GeneticCandidate@tmp/calculator_1(9)[0.09]
Found 1 equivalent patches.
Mutations: [InsertBoth(7,19)]

---------- Evaluation Matrix ----------
STILL PASSING: [50/50]
NOW FAILING: [0/50]
NOW PASSING: [0/50]
STILL FAILING: [50/50]
PRECISION: 0.0
RECALL: 0.0
ACCURACY: 0.5
F1 SCORE: 0.0
---------------------------------------
--- src/calc/__init__.py
+++ src/calc/__init__.py
@@ -1,5 +1,3 @@
-#!/bin/python3
-
 """
 This file contains the code under test for the example bug.
 The sqrt() method fails on x <= 0.
@@ -8,29 +6,27 @@
 from math import sin as rsin
 from math import tan as rtan
 
-
 def sqrt(x):
     """Computes the square root of x, using the Newton-Raphson method"""
     x = max(x, 0)
     approx = None
+
+    def main(arg):
+        return eval(arg)
     guess = x / 2
     while approx != guess:
         approx = guess
         guess = (approx + x / approx) / 2
     return approx
 
-
 def tan(x):
     return rtan(x)
-
 
 def cos(x):
     return rcos(x)
 
-
 def sin(x):
     return rsin(x)
 
-
 def main(arg):
     return eval(arg)

____________________________________________________________________________________________________

GeneticCandidate@tmp/calculator_1(11)[0.09]
Found 1 equivalent patches.
Mutations: [InsertBoth(7,8)]

---------- Evaluation Matrix ----------
STILL PASSING: [50/50]
NOW FAILING: [0/50]
NOW PASSING: [0/50]
STILL FAILING: [50/50]
PRECISION: 0.0
RECALL: 0.0
ACCURACY: 0.5
F1 SCORE: 0.0
---------------------------------------
--- src/calc/__init__.py
+++ src/calc/__init__.py
@@ -1,5 +1,3 @@
-#!/bin/python3
-
 """
 This file contains the code under test for the example bug.
 The sqrt() method fails on x <= 0.
@@ -8,29 +6,25 @@
 from math import sin as rsin
 from math import tan as rtan
 
-
 def sqrt(x):
     """Computes the square root of x, using the Newton-Raphson method"""
     x = max(x, 0)
     approx = None
+    guess = x / 2
     guess = x / 2
     while approx != guess:
         approx = guess
         guess = (approx + x / approx) / 2
     return approx
 
-
 def tan(x):
     return rtan(x)
-
 
 def cos(x):
     return rcos(x)
 
-
 def sin(x):
     return rsin(x)
 
-
 def main(arg):
     return eval(arg)

____________________________________________________________________________________________________

GeneticCandidate@tmp/calculator_1(9)[0.09]
Found 1 equivalent patches.
Mutations: [InsertBoth(11,17)]

---------- Evaluation Matrix ----------
STILL PASSING: [50/50]
NOW FAILING: [0/50]
NOW PASSING: [0/50]
STILL FAILING: [50/50]
PRECISION: 0.0
RECALL: 0.0
ACCURACY: 0.5
F1 SCORE: 0.0
---------------------------------------
--- src/calc/__init__.py
+++ src/calc/__init__.py
@@ -1,5 +1,3 @@
-#!/bin/python3
-
 """
 This file contains the code under test for the example bug.
 The sqrt() method fails on x <= 0.
@@ -7,7 +5,6 @@
 from math import cos as rcos
 from math import sin as rsin
 from math import tan as rtan
-
 
 def sqrt(x):
     """Computes the square root of x, using the Newton-Raphson method"""
@@ -17,20 +14,19 @@
     while approx != guess:
         approx = guess
         guess = (approx + x / approx) / 2
+
+        def sin(x):
+            return rsin(x)
     return approx
-
 
 def tan(x):
     return rtan(x)
 
-
 def cos(x):
     return rcos(x)
-
 
 def sin(x):
     return rsin(x)
 
-
 def main(arg):
     return eval(arg)

____________________________________________________________________________________________________

GeneticCandidate@tmp/calculator_1(12)[0.09]
Found 1 equivalent patches.
Mutations: [InsertBoth(9,2)]

---------- Evaluation Matrix ----------
STILL PASSING: [50/50]
NOW FAILING: [0/50]
NOW PASSING: [0/50]
STILL FAILING: [50/50]
PRECISION: 0.0
RECALL: 0.0
ACCURACY: 0.5
F1 SCORE: 0.0
---------------------------------------
--- src/calc/__init__.py
+++ src/calc/__init__.py
@@ -1,5 +1,3 @@
-#!/bin/python3
-
 """
 This file contains the code under test for the example bug.
 The sqrt() method fails on x <= 0.
@@ -7,7 +5,6 @@
 from math import cos as rcos
 from math import sin as rsin
 from math import tan as rtan
-
 
 def sqrt(x):
     """Computes the square root of x, using the Newton-Raphson method"""
@@ -17,20 +14,17 @@
     while approx != guess:
         approx = guess
         guess = (approx + x / approx) / 2
+    from math import sin as rsin
     return approx
-
 
 def tan(x):
     return rtan(x)
 
-
 def cos(x):
     return rcos(x)
-
 
 def sin(x):
     return rsin(x)
 
-
 def main(arg):
     return eval(arg)

____________________________________________________________________________________________________

GeneticCandidate@tmp/calculator_1(8)[0.09]
Found 1 equivalent patches.
Mutations: [InsertBoth(11,3)]

---------- Evaluation Matrix ----------
STILL PASSING: [50/50]
NOW FAILING: [0/50]
NOW PASSING: [0/50]
STILL FAILING: [50/50]
PRECISION: 0.0
RECALL: 0.0
ACCURACY: 0.5
F1 SCORE: 0.0
---------------------------------------
--- src/calc/__init__.py
+++ src/calc/__init__.py
@@ -1,5 +1,3 @@
-#!/bin/python3
-
 """
 This file contains the code under test for the example bug.
 The sqrt() method fails on x <= 0.
@@ -8,7 +6,6 @@
 from math import sin as rsin
 from math import tan as rtan
 
-
 def sqrt(x):
     """Computes the square root of x, using the Newton-Raphson method"""
     x = max(x, 0)
@@ -16,21 +13,18 @@
     guess = x / 2
     while approx != guess:
         approx = guess
+        from math import tan as rtan
         guess = (approx + x / approx) / 2
     return approx
-
 
 def tan(x):
     return rtan(x)
 
-
 def cos(x):
     return rcos(x)
-
 
 def sin(x):
     return rsin(x)
 
-
 def main(arg):
     return eval(arg)

____________________________________________________________________________________________________

GeneticCandidate@tmp/calculator_1(10)[0.09]
Found 1 equivalent patches.
Mutations: [InsertBoth(7,3)]

---------- Evaluation Matrix ----------
STILL PASSING: [50/50]
NOW FAILING: [0/50]
NOW PASSING: [0/50]
STILL FAILING: [50/50]
PRECISION: 0.0
RECALL: 0.0
ACCURACY: 0.5
F1 SCORE: 0.0
---------------------------------------
--- src/calc/__init__.py
+++ src/calc/__init__.py
@@ -1,5 +1,3 @@
-#!/bin/python3
-
 """
 This file contains the code under test for the example bug.
 The sqrt() method fails on x <= 0.
@@ -8,29 +6,25 @@
 from math import sin as rsin
 from math import tan as rtan
 
-
 def sqrt(x):
     """Computes the square root of x, using the Newton-Raphson method"""
     x = max(x, 0)
     approx = None
+    from math import tan as rtan
     guess = x / 2
     while approx != guess:
         approx = guess
         guess = (approx + x / approx) / 2
     return approx
 
-
 def tan(x):
     return rtan(x)
-
 
 def cos(x):
     return rcos(x)
 
-
 def sin(x):
     return rsin(x)
 
-
 def main(arg):
     return eval(arg)

____________________________________________________________________________________________________

GeneticCandidate@tmp/calculator_1(7)[0.09]
Found 1 equivalent patches.
Mutations: []

---------- Evaluation Matrix ----------
STILL PASSING: [50/50]
NOW FAILING: [0/50]
NOW PASSING: [0/50]
STILL FAILING: [50/50]
PRECISION: 0.0
RECALL: 0.0
ACCURACY: 0.5
F1 SCORE: 0.0
---------------------------------------
Patch could not be printed.

____________________________________________________________________________________________________

