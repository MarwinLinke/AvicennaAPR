APPROACH: PyGenProg
SUBJECT: markup_2
Used 50 failing and 50 passing test cases from Avicenna in the fault localization
Used 50 failing and 50 passing test cases from Avicenna in the validation
In total 100 for fault localization and 100 for validation.
The gathering of test cases took 3.3708 seconds.
The repair ran for 384.3747 seconds.
The evaluation took 82.1639 seconds.
Was a valid patch found: False
BEST FITNESS: 0.5018181818181818
BEST F1 SCORE: 0.5050505050505051
Found a total of 1 patches.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

PATCHES (SORTED):
GeneticCandidate@tmp/markup_2(1)[0.50]
---------- Evaluation Matrix ----------
STILL PASSING: [26/50]
NOW FAILING: [24/50]
NOW PASSING: [25/50]
STILL FAILING: [25/50]
PRECISION: 0.5102040816326531
RECALL: 0.5
ACCURACY: 0.51
F1 SCORE: 0.5050505050505051
---------------------------------------
--- src/markup/__init__.py
+++ src/markup/__init__.py
@@ -1,16 +1,16 @@
 def remove_html_markup(s):
     tag = True
     quote = False
-    out = ""
-
+    out = ''
     for c in s:
-        if c == "<" and not quote:
+        if c == '<' and (not quote):
             tag = True
-        elif c == ">" and not quote:
+        elif c == '>' and (not quote):
             tag = False
-        elif (c == '"' or c == "'") and tag:  # <-- FIX
+        elif (c == '"' or c == "'") and tag:
             quote = not quote
-        elif not tag:
-            out = out + c
-
-    return out
+        else:
+            if not tag:
+                out = out + c
+            quote = False
+    return out

____________________________________________________________________________________________________

