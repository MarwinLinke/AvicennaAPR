APPROACH: PyGenProg
SUBJECT: middle_1
Used 30 failing and 30 passing test cases from Avicenna in the fault localization
Used 30 failing and 30 passing test cases from Avicenna in the validation
In total 60 for fault localization and 60 for validation.
The gathering of test cases took 1.8868 seconds.
The repair ran for 413.1859 seconds.
The evaluation took 96.3742 seconds.
Was a valid patch found: False
BEST FITNESS: 0.9272727272727272
BEST F1 SCORE: 0.7142857142857143
Found a total of 1 patches.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

PATCHES (SORTED):
GeneticCandidate@tmp/middle_1(1)[0.93] Found 1 equivalent patches.
---------- Evaluation Matrix ----------
STILL PASSING: [10/50]
NOW FAILING: [40/50]
NOW PASSING: [50/50]
STILL FAILING: [0/50]
PRECISION: 0.5555555555555556
RECALL: 1.0
ACCURACY: 0.6
F1 SCORE: 0.7142857142857143
---------------------------------------
--- src/middle/__init__.py
+++ src/middle/__init__.py
@@ -1,13 +1,4 @@
 def middle(x, y, z):
     m = z
-    if y < z:
-        if x < y:
-            m = y
-        elif x < z:
-            m = y
-    else:
-        if x > y:
-            m = y
-        elif x > z:
-            m = x
-    return m
+    m = x
+    return m

____________________________________________________________________________________________________

