APPROACH: PyGenProg
SUBJECT: markup_2
Used 5 failing and 5 passing test cases from Avicenna in the fault localization
Used 5 failing and 5 passing test cases from Avicenna in the validation
In total 10 for fault localization and 10 for validation.
The gathering of test cases took 3.1571 seconds.
The repair ran for 276.5143 seconds.
The evaluation took 53.3741 seconds.
Was a valid patch found: False
BEST FITNESS: 0.10181818181818182
BEST F1 SCORE: 0.10101010101010102
Found a total of 1 patches.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

PATCHES (SORTED):
GeneticCandidate@tmp/markup_2(2)[0.10] Found 1 equivalent patches.
---------- Evaluation Matrix ----------
STILL PASSING: [6/50]
NOW FAILING: [44/50]
NOW PASSING: [5/50]
STILL FAILING: [45/50]
PRECISION: 0.10204081632653061
RECALL: 0.1
ACCURACY: 0.11
F1 SCORE: 0.10101010101010102
---------------------------------------
--- src/markup/__init__.py
+++ src/markup/__init__.py
@@ -1,16 +1,15 @@
 def remove_html_markup(s):
     tag = True
     quote = False
-    out = ""
-
+    out = ''
     for c in s:
-        if c == "<" and not quote:
+        if c == '<' and (not quote):
             tag = True
-        elif c == ">" and not quote:
+        elif c == '>' and (not quote):
             tag = False
-        elif (c == '"' or c == "'") and tag:  # <-- FIX
+        elif (c == '"' or c == "'") and tag:
             quote = not quote
         elif not tag:
             out = out + c
-
-    return out
+    out = out + c
+    return out

____________________________________________________________________________________________________

