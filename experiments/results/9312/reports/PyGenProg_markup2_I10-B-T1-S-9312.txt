APPROACH: PyGenProg
SUBJECT: markup_2
Used 1 failing and 10 passing test cases from Tests4py in the fault localization
Used 1 failing and 10 passing test cases from Tests4py in the validation
In total 11 for fault localization and 11 for validation.
The gathering of test cases took 2.4831 seconds.
The repair ran for 443.1156 seconds.
The evaluation took 51.2271 seconds.
Was a valid patch found: False
BEST FITNESS: 0.6909090909090909
BEST F1 SCORE: 0.7951807228915663
Found a total of 1 patches.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

PATCHES (SORTED):
GeneticCandidate@tmp/markup_2(5)[0.69] Found 1 equivalent patches.
---------- Evaluation Matrix ----------
STILL PASSING: [50/50]
NOW FAILING: [0/50]
NOW PASSING: [33/50]
STILL FAILING: [17/50]
PRECISION: 1.0
RECALL: 0.66
ACCURACY: 0.83
F1 SCORE: 0.7951807228915663
---------------------------------------
--- src/markup/__init__.py
+++ src/markup/__init__.py
@@ -1,16 +1,15 @@
 def remove_html_markup(s):
     tag = True
+    tag = False
     quote = False
-    out = ""
-
+    out = ''
     for c in s:
-        if c == "<" and not quote:
+        if c == '<' and (not quote):
             tag = True
-        elif c == ">" and not quote:
+        elif c == '>' and (not quote):
             tag = False
-        elif (c == '"' or c == "'") and tag:  # <-- FIX
+        elif (c == '"' or c == "'") and tag:
             quote = not quote
         elif not tag:
             out = out + c
-
-    return out
+    return out

____________________________________________________________________________________________________

