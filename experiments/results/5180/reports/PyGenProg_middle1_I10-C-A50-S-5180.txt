APPROACH: PyGenProg
SUBJECT: middle_1
Used 50 failing and 50 passing test cases from Avicenna in the fault localization
Used 50 failing and 50 passing test cases from Avicenna in the validation
In total 100 for fault localization and 100 for validation.
The gathering of test cases took 1.7276 seconds.
The repair ran for 857.2430 seconds.
The evaluation took 86.9002 seconds.
Was a valid patch found: False
BEST FITNESS: 0.9618181818181818
BEST F1 SCORE: 0.8264462809917354
Found a total of 1 patches.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

PATCHES (SORTED):
GeneticCandidate@tmp/middle_1(7)[0.96]
---------- Evaluation Matrix ----------
STILL PASSING: [29/50]
NOW FAILING: [21/50]
NOW PASSING: [50/50]
STILL FAILING: [0/50]
PRECISION: 0.704225352112676
RECALL: 1.0
ACCURACY: 0.79
F1 SCORE: 0.8264462809917354
---------------------------------------
--- src/middle/__init__.py
+++ src/middle/__init__.py
@@ -1,13 +1,9 @@
 def middle(x, y, z):
     m = z
     if y < z:
-        if x < y:
-            m = y
-        elif x < z:
-            m = y
-    else:
-        if x > y:
-            m = y
-        elif x > z:
-            m = x
-    return m
+        m = x
+    elif x > y:
+        m = y
+    elif x > z:
+        m = x
+    return m

____________________________________________________________________________________________________

