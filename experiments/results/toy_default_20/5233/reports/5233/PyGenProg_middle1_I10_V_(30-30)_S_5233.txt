APPROACH: PyGenProg
SUBJECT: middle_1

Test Cases Used:
  - (Baseline) Fault Localization: 1 failing, 10 passing (Total: 11)
  - (Enhanced) Validation: 30 failing, 30 passing (Total: 60)

Execution Times:
  - Test Case Gathering: 0.8303 seconds
  - Repair: 521.9792 seconds
  - Evaluation: 62.4255 seconds

Results:
  - Valid Patch Found: False
  - Best Fitness: 0.9727
  - Best F1 Score: 0.8696
  - Total Patches Found: 12
  - Generations Completed: 10/10

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Sorted patches by descending fitness:

GeneticCandidate@tmp/middle_1(8)[0.97]
Found 9 equivalent patches.
Mutations: [InsertBoth(5,11), Replace(1,10)]

---------- Evaluation Matrix ----------
STILL PASSING: [35/50]
NOW FAILING: [15/50]
NOW PASSING: [50/50]
STILL FAILING: [0/50]
PRECISION: 0.7692307692307693
RECALL: 1.0
ACCURACY: 0.85
F1 SCORE: 0.8695652173913044
---------------------------------------
--- src/middle/__init__.py
+++ src/middle/__init__.py
@@ -1,13 +1,14 @@
 def middle(x, y, z):
-    m = z
+    m = x
     if y < z:
         if x < y:
             m = y
-        elif x < z:
-            m = y
-    else:
-        if x > y:
-            m = y
-        elif x > z:
-            m = x
-    return m
+        else:
+            return m
+            if x < z:
+                m = y
+    elif x > y:
+        m = y
+    elif x > z:
+        m = x
+    return m

____________________________________________________________________________________________________

GeneticCandidate@tmp/middle_1(7)[0.97]
Found 3 equivalent patches.
Mutations: [Replace(1,10), Delete(6)]

---------- Evaluation Matrix ----------
STILL PASSING: [35/50]
NOW FAILING: [15/50]
NOW PASSING: [50/50]
STILL FAILING: [0/50]
PRECISION: 0.7692307692307693
RECALL: 1.0
ACCURACY: 0.85
F1 SCORE: 0.8695652173913044
---------------------------------------
--- src/middle/__init__.py
+++ src/middle/__init__.py
@@ -1,13 +1,12 @@
 def middle(x, y, z):
-    m = z
+    m = x
     if y < z:
         if x < y:
             m = y
         elif x < z:
-            m = y
-    else:
-        if x > y:
-            m = y
-        elif x > z:
-            m = x
-    return m
+            pass
+    elif x > y:
+        m = y
+    elif x > z:
+        m = x
+    return m

____________________________________________________________________________________________________

