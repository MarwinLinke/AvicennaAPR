APPROACH: PyGenProg
SUBJECT: markup_1

Test Cases Used:
  - (Baseline) Fault Localization: 1 failing, 10 passing (Total: 11)
  - (Enhanced) Validation: 5 failing, 5 passing (Total: 10)

Execution Times:
  - Test Case Gathering: 2.7215 seconds
  - Repair: 571.0107 seconds
  - Evaluation: 54.0597 seconds

Results:
  - Valid Patch Found: False
  - Best Fitness: 0.3055
  - Best F1 Score: 0.3467
  - Total Patches Found: 1
  - Generations Completed: 10/10

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Sorted patches by descending fitness:

GeneticCandidate@tmp/markup_1(10)[0.31]
Found 1 equivalent patches.
Mutations: [InsertBoth(13,4), InsertBoth(5,6)]

---------- Evaluation Matrix ----------
STILL PASSING: [38/50]
NOW FAILING: [12/50]
NOW PASSING: [13/50]
STILL FAILING: [37/50]
PRECISION: 0.52
RECALL: 0.26
ACCURACY: 0.51
F1 SCORE: 0.3466666666666667
---------------------------------------
--- src/markup/__init__.py
+++ src/markup/__init__.py
@@ -1,16 +1,24 @@
 def remove_html_markup(s):
     tag = False
     quote = False
-    out = ""
-
+    out = ''
     for c in s:
-        if c == "<" and not quote:
+        if c == '<' and (not quote):
             tag = True
-        elif c == ">" and not quote:
+        elif c == '>' and (not quote):
             tag = False
-        elif c == '"' or c == "'" and tag:
+        elif c == '"' or (c == "'" and tag):
             quote = not quote
         elif not tag:
             out = out + c
-
-    return out
+        tag = True
+    for c in s:
+        if c == '<' and (not quote):
+            tag = True
+        elif c == '>' and (not quote):
+            tag = False
+        elif c == '"' or (c == "'" and tag):
+            quote = not quote
+        elif not tag:
+            out = out + c
+    return out

____________________________________________________________________________________________________

