APPROACH: PyGenProg
SUBJECT: markup_2

Test Cases Used:
  - (Baseline) Fault Localization: 1 failing, 10 passing (Total: 11)
  - (Baseline) Validation: 1 failing, 10 passing (Total: 11)

Execution Times:
  - Test Case Gathering: 2.1701 seconds
  - Repair: 368.8872 seconds
  - Evaluation: 60.4305 seconds

Results:
  - Valid Patch Found: False
  - Best Fitness: 0.4473
  - Best F1 Score: 0.4583
  - Total Patches Found: 26
  - Generations Completed: 10/10

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Sorted patches by descending fitness:

GeneticCandidate@tmp/markup_2(12)[0.45]
Found 6 equivalent patches.
Mutations: [Delete(10)]

---------- Evaluation Matrix ----------
STILL PASSING: [26/50]
NOW FAILING: [24/50]
NOW PASSING: [22/50]
STILL FAILING: [28/50]
PRECISION: 0.4782608695652174
RECALL: 0.44
ACCURACY: 0.48
F1 SCORE: 0.4583333333333333
---------------------------------------
--- src/markup/__init__.py
+++ src/markup/__init__.py
@@ -1,16 +1,14 @@
 def remove_html_markup(s):
     tag = True
     quote = False
-    out = ""
-
+    out = ''
     for c in s:
-        if c == "<" and not quote:
+        if c == '<' and (not quote):
             tag = True
-        elif c == ">" and not quote:
+        elif c == '>' and (not quote):
             tag = False
-        elif (c == '"' or c == "'") and tag:  # <-- FIX
-            quote = not quote
+        elif (c == '"' or c == "'") and tag:
+            pass
         elif not tag:
             out = out + c
-
-    return out
+    return out

____________________________________________________________________________________________________

GeneticCandidate@tmp/markup_2(6)[0.45]
Found 2 equivalent patches.
Mutations: [Replace(10,2)]

---------- Evaluation Matrix ----------
STILL PASSING: [26/50]
NOW FAILING: [24/50]
NOW PASSING: [22/50]
STILL FAILING: [28/50]
PRECISION: 0.4782608695652174
RECALL: 0.44
ACCURACY: 0.48
F1 SCORE: 0.4583333333333333
---------------------------------------
--- src/markup/__init__.py
+++ src/markup/__init__.py
@@ -1,16 +1,14 @@
 def remove_html_markup(s):
     tag = True
     quote = False
-    out = ""
-
+    out = ''
     for c in s:
-        if c == "<" and not quote:
+        if c == '<' and (not quote):
             tag = True
-        elif c == ">" and not quote:
+        elif c == '>' and (not quote):
             tag = False
-        elif (c == '"' or c == "'") and tag:  # <-- FIX
-            quote = not quote
+        elif (c == '"' or c == "'") and tag:
+            quote = False
         elif not tag:
             out = out + c
-
-    return out
+    return out

____________________________________________________________________________________________________

GeneticCandidate@tmp/markup_2(9)[0.45]
Found 1 equivalent patches.
Mutations: [InsertBoth(10,9)]

---------- Evaluation Matrix ----------
STILL PASSING: [26/50]
NOW FAILING: [24/50]
NOW PASSING: [22/50]
STILL FAILING: [28/50]
PRECISION: 0.4782608695652174
RECALL: 0.44
ACCURACY: 0.48
F1 SCORE: 0.4583333333333333
---------------------------------------
--- src/markup/__init__.py
+++ src/markup/__init__.py
@@ -1,16 +1,18 @@
 def remove_html_markup(s):
     tag = True
     quote = False
-    out = ""
-
+    out = ''
     for c in s:
-        if c == "<" and not quote:
+        if c == '<' and (not quote):
             tag = True
-        elif c == ">" and not quote:
+        elif c == '>' and (not quote):
             tag = False
-        elif (c == '"' or c == "'") and tag:  # <-- FIX
+        elif (c == '"' or c == "'") and tag:
             quote = not quote
+            if (c == '"' or c == "'") and tag:
+                quote = not quote
+            elif not tag:
+                out = out + c
         elif not tag:
             out = out + c
-
-    return out
+    return out

____________________________________________________________________________________________________

GeneticCandidate@tmp/markup_2(12)[0.41]
Found 11 equivalent patches.
Mutations: [InsertBoth(3,2)]

---------- Evaluation Matrix ----------
STILL PASSING: [26/50]
NOW FAILING: [24/50]
NOW PASSING: [20/50]
STILL FAILING: [30/50]
PRECISION: 0.45454545454545453
RECALL: 0.4
ACCURACY: 0.46
F1 SCORE: 0.4255319148936171
---------------------------------------
--- src/markup/__init__.py
+++ src/markup/__init__.py
@@ -1,16 +1,15 @@
 def remove_html_markup(s):
     tag = True
     quote = False
-    out = ""
-
+    out = ''
+    quote = False
     for c in s:
-        if c == "<" and not quote:
+        if c == '<' and (not quote):
             tag = True
-        elif c == ">" and not quote:
+        elif c == '>' and (not quote):
             tag = False
-        elif (c == '"' or c == "'") and tag:  # <-- FIX
+        elif (c == '"' or c == "'") and tag:
             quote = not quote
         elif not tag:
             out = out + c
-
-    return out
+    return out

____________________________________________________________________________________________________

GeneticCandidate@tmp/markup_2(11)[0.41]
Found 1 equivalent patches.
Mutations: [InsertBoth(1,11)]

---------- Evaluation Matrix ----------
STILL PASSING: [26/50]
NOW FAILING: [24/50]
NOW PASSING: [20/50]
STILL FAILING: [30/50]
PRECISION: 0.45454545454545453
RECALL: 0.4
ACCURACY: 0.46
F1 SCORE: 0.4255319148936171
---------------------------------------
--- src/markup/__init__.py
+++ src/markup/__init__.py
@@ -1,16 +1,16 @@
 def remove_html_markup(s):
     tag = True
+    if not tag:
+        out = out + c
     quote = False
-    out = ""
-
+    out = ''
     for c in s:
-        if c == "<" and not quote:
+        if c == '<' and (not quote):
             tag = True
-        elif c == ">" and not quote:
+        elif c == '>' and (not quote):
             tag = False
-        elif (c == '"' or c == "'") and tag:  # <-- FIX
+        elif (c == '"' or c == "'") and tag:
             quote = not quote
         elif not tag:
             out = out + c
-
-    return out
+    return out

____________________________________________________________________________________________________

GeneticCandidate@tmp/markup_2(9)[0.41]
Found 1 equivalent patches.
Mutations: [InsertBoth(3,2)]

---------- Evaluation Matrix ----------
STILL PASSING: [26/50]
NOW FAILING: [24/50]
NOW PASSING: [20/50]
STILL FAILING: [30/50]
PRECISION: 0.45454545454545453
RECALL: 0.4
ACCURACY: 0.46
F1 SCORE: 0.4255319148936171
---------------------------------------
--- src/markup/__init__.py
+++ src/markup/__init__.py
@@ -1,16 +1,15 @@
 def remove_html_markup(s):
     tag = True
     quote = False
-    out = ""
-
+    quote = False
+    out = ''
     for c in s:
-        if c == "<" and not quote:
+        if c == '<' and (not quote):
             tag = True
-        elif c == ">" and not quote:
+        elif c == '>' and (not quote):
             tag = False
-        elif (c == '"' or c == "'") and tag:  # <-- FIX
+        elif (c == '"' or c == "'") and tag:
             quote = not quote
         elif not tag:
             out = out + c
-
-    return out
+    return out

____________________________________________________________________________________________________

GeneticCandidate@tmp/markup_2(10)[0.41]
Found 1 equivalent patches.
Mutations: []

---------- Evaluation Matrix ----------
STILL PASSING: [26/50]
NOW FAILING: [24/50]
NOW PASSING: [20/50]
STILL FAILING: [30/50]
PRECISION: 0.45454545454545453
RECALL: 0.4
ACCURACY: 0.46
F1 SCORE: 0.4255319148936171
---------------------------------------
Patch could not be printed.

____________________________________________________________________________________________________

GeneticCandidate@tmp/markup_2(13)[0.36]
Found 3 equivalent patches.
Mutations: [Delete(1)]

---------- Evaluation Matrix ----------
STILL PASSING: [26/50]
NOW FAILING: [24/50]
NOW PASSING: [17/50]
STILL FAILING: [33/50]
PRECISION: 0.4146341463414634
RECALL: 0.34
ACCURACY: 0.43
F1 SCORE: 0.3736263736263737
---------------------------------------
--- src/markup/__init__.py
+++ src/markup/__init__.py
@@ -1,16 +1,14 @@
 def remove_html_markup(s):
-    tag = True
+    pass
     quote = False
-    out = ""
-
+    out = ''
     for c in s:
-        if c == "<" and not quote:
+        if c == '<' and (not quote):
             tag = True
-        elif c == ">" and not quote:
+        elif c == '>' and (not quote):
             tag = False
-        elif (c == '"' or c == "'") and tag:  # <-- FIX
+        elif (c == '"' or c == "'") and tag:
             quote = not quote
         elif not tag:
             out = out + c
-
-    return out
+    return out

____________________________________________________________________________________________________

