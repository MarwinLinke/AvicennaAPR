APPROACH: PyGenProg
SUBJECT: markup_2

Test Cases Used:
  - (Baseline) Fault Localization: 1 failing, 10 passing (Total: 11)
  - (Enhanced) Validation: 10 failing, 10 passing (Total: 20)

Execution Times:
  - Test Case Gathering: 2.2684 seconds
  - Repair: 153.7200 seconds
  - Evaluation: 57.0258 seconds

Results:
  - Valid Patch Found: False
  - Best Fitness: 0.4109
  - Best F1 Score: 0.4255
  - Total Patches Found: 4
  - Generations Completed: 10/10

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Sorted patches by descending fitness:

GeneticCandidate@tmp/markup_2(5)[0.41]
Found 1 equivalent patches.
Mutations: []

---------- Evaluation Matrix ----------
STILL PASSING: [26/50]
NOW FAILING: [24/50]
NOW PASSING: [20/50]
STILL FAILING: [30/50]
PRECISION: 0.45454545454545453
RECALL: 0.4
ACCURACY: 0.46
F1 SCORE: 0.4255319148936171
---------------------------------------
Patch could not be printed.

____________________________________________________________________________________________________

GeneticCandidate@tmp/markup_2(14)[0.41]
Found 1 equivalent patches.
Mutations: [InsertBoth(4,6)]

---------- Evaluation Matrix ----------
STILL PASSING: [26/50]
NOW FAILING: [24/50]
NOW PASSING: [20/50]
STILL FAILING: [30/50]
PRECISION: 0.45454545454545453
RECALL: 0.4
ACCURACY: 0.46
F1 SCORE: 0.4255319148936171
---------------------------------------
--- src/markup/__init__.py
+++ src/markup/__init__.py
@@ -1,16 +1,15 @@
 def remove_html_markup(s):
     tag = True
     quote = False
-    out = ""
-
+    out = ''
     for c in s:
-        if c == "<" and not quote:
+        if c == '<' and (not quote):
             tag = True
-        elif c == ">" and not quote:
+        elif c == '>' and (not quote):
             tag = False
-        elif (c == '"' or c == "'") and tag:  # <-- FIX
+        elif (c == '"' or c == "'") and tag:
             quote = not quote
         elif not tag:
             out = out + c
-
-    return out
+    tag = True
+    return out

____________________________________________________________________________________________________

GeneticCandidate@tmp/markup_2(11)[0.41]
Found 1 equivalent patches.
Mutations: [Replace(10,13)]

---------- Evaluation Matrix ----------
STILL PASSING: [26/50]
NOW FAILING: [24/50]
NOW PASSING: [20/50]
STILL FAILING: [30/50]
PRECISION: 0.45454545454545453
RECALL: 0.4
ACCURACY: 0.46
F1 SCORE: 0.4255319148936171
---------------------------------------
--- src/markup/__init__.py
+++ src/markup/__init__.py
@@ -1,16 +1,14 @@
 def remove_html_markup(s):
     tag = True
     quote = False
-    out = ""
-
+    out = ''
     for c in s:
-        if c == "<" and not quote:
+        if c == '<' and (not quote):
             tag = True
-        elif c == ">" and not quote:
+        elif c == '>' and (not quote):
             tag = False
-        elif (c == '"' or c == "'") and tag:  # <-- FIX
-            quote = not quote
+        elif (c == '"' or c == "'") and tag:
+            return out
         elif not tag:
             out = out + c
-
-    return out
+    return out

____________________________________________________________________________________________________

GeneticCandidate@tmp/markup_2(10)[0.29]
Found 1 equivalent patches.
Mutations: [Replace(9,1), InsertBoth(9,5)]

---------- Evaluation Matrix ----------
STILL PASSING: [18/50]
NOW FAILING: [32/50]
NOW PASSING: [14/50]
STILL FAILING: [36/50]
PRECISION: 0.30434782608695654
RECALL: 0.28
ACCURACY: 0.32
F1 SCORE: 0.2916666666666667
---------------------------------------
--- src/markup/__init__.py
+++ src/markup/__init__.py
@@ -1,16 +1,20 @@
 def remove_html_markup(s):
     tag = True
     quote = False
-    out = ""
-
+    out = ''
     for c in s:
-        if c == "<" and not quote:
+        if c == '<' and (not quote):
             tag = True
-        elif c == ">" and not quote:
+        elif c == '>' and (not quote):
             tag = False
-        elif (c == '"' or c == "'") and tag:  # <-- FIX
-            quote = not quote
-        elif not tag:
-            out = out + c
-
-    return out
+        else:
+            if c == '<' and (not quote):
+                tag = True
+            elif c == '>' and (not quote):
+                tag = False
+            elif (c == '"' or c == "'") and tag:
+                quote = not quote
+            elif not tag:
+                out = out + c
+            tag = True
+    return out

____________________________________________________________________________________________________

