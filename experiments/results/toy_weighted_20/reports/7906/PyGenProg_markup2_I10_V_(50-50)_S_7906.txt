APPROACH: PyGenProg
SUBJECT: markup_2

Test Cases Used:
  - (Baseline) Fault Localization: 1 failing, 10 passing (Total: 11)
  - (Enhanced) Validation: 50 failing, 50 passing (Total: 100)

Execution Times:
  - Test Case Gathering: 2.1595 seconds
  - Repair: 468.2480 seconds
  - Evaluation: 60.2543 seconds

Results:
  - Valid Patch Found: False
  - Best Fitness: 0.7636
  - Best F1 Score: 0.8506
  - Total Patches Found: 10
  - Generations Completed: 10/10

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Sorted patches by descending fitness:

GeneticCandidate@tmp/markup_2(6)[0.76]
Found 7 equivalent patches.
Mutations: [InsertBoth(2,8), Delete(10)]

---------- Evaluation Matrix ----------
STILL PASSING: [50/50]
NOW FAILING: [0/50]
NOW PASSING: [37/50]
STILL FAILING: [13/50]
PRECISION: 1.0
RECALL: 0.74
ACCURACY: 0.87
F1 SCORE: 0.8505747126436781
---------------------------------------
--- src/markup/__init__.py
+++ src/markup/__init__.py
@@ -1,16 +1,15 @@
 def remove_html_markup(s):
     tag = True
+    tag = False
     quote = False
-    out = ""
-
+    out = ''
     for c in s:
-        if c == "<" and not quote:
+        if c == '<' and (not quote):
             tag = True
-        elif c == ">" and not quote:
+        elif c == '>' and (not quote):
             tag = False
-        elif (c == '"' or c == "'") and tag:  # <-- FIX
-            quote = not quote
+        elif (c == '"' or c == "'") and tag:
+            pass
         elif not tag:
             out = out + c
-
-    return out
+    return out

____________________________________________________________________________________________________

GeneticCandidate@tmp/markup_2(8)[0.76]
Found 2 equivalent patches.
Mutations: [InsertBoth(2,8), Replace(10,0)]

---------- Evaluation Matrix ----------
STILL PASSING: [50/50]
NOW FAILING: [0/50]
NOW PASSING: [37/50]
STILL FAILING: [13/50]
PRECISION: 1.0
RECALL: 0.74
ACCURACY: 0.87
F1 SCORE: 0.8505747126436781
---------------------------------------
--- src/markup/__init__.py
+++ src/markup/__init__.py
@@ -1,16 +1,29 @@
 def remove_html_markup(s):
     tag = True
+    tag = False
     quote = False
-    out = ""
+    out = ''
+    for c in s:
+        if c == '<' and (not quote):
+            tag = True
+        elif c == '>' and (not quote):
+            tag = False
+        elif (c == '"' or c == "'") and tag:
 
-    for c in s:
-        if c == "<" and not quote:
-            tag = True
-        elif c == ">" and not quote:
-            tag = False
-        elif (c == '"' or c == "'") and tag:  # <-- FIX
-            quote = not quote
+            def remove_html_markup(s):
+                tag = True
+                quote = False
+                out = ''
+                for c in s:
+                    if c == '<' and (not quote):
+                        tag = True
+                    elif c == '>' and (not quote):
+                        tag = False
+                    elif (c == '"' or c == "'") and tag:
+                        quote = not quote
+                    elif not tag:
+                        out = out + c
+                return out
         elif not tag:
             out = out + c
-
-    return out
+    return out

____________________________________________________________________________________________________

GeneticCandidate@tmp/markup_2(9)[0.76]
Found 1 equivalent patches.
Mutations: [Delete(10), InsertBoth(2,8)]

---------- Evaluation Matrix ----------
STILL PASSING: [50/50]
NOW FAILING: [0/50]
NOW PASSING: [37/50]
STILL FAILING: [13/50]
PRECISION: 1.0
RECALL: 0.74
ACCURACY: 0.87
F1 SCORE: 0.8505747126436781
---------------------------------------
--- src/markup/__init__.py
+++ src/markup/__init__.py
@@ -1,16 +1,15 @@
 def remove_html_markup(s):
     tag = True
+    tag = False
     quote = False
-    out = ""
-
+    out = ''
     for c in s:
-        if c == "<" and not quote:
+        if c == '<' and (not quote):
             tag = True
-        elif c == ">" and not quote:
+        elif c == '>' and (not quote):
             tag = False
-        elif (c == '"' or c == "'") and tag:  # <-- FIX
-            quote = not quote
+        elif (c == '"' or c == "'") and tag:
+            pass
         elif not tag:
             out = out + c
-
-    return out
+    return out

____________________________________________________________________________________________________

