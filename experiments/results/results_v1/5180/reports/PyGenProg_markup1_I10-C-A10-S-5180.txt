APPROACH: PyGenProg
SUBJECT: markup_1
Used 10 failing and 10 passing test cases from Avicenna in the fault localization
Used 10 failing and 10 passing test cases from Avicenna in the validation
In total 20 for fault localization and 20 for validation.
The gathering of test cases took 3.3506 seconds.
The repair ran for 573.0224 seconds.
The evaluation took 52.2307 seconds.
Was a valid patch found: False
BEST FITNESS: 0.32545454545454544
BEST F1 SCORE: 0.37333333333333335
Found a total of 1 patches.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

PATCHES (SORTED):
GeneticCandidate@tmp/markup_1(13)[0.33]
---------- Evaluation Matrix ----------
STILL PASSING: [39/50]
NOW FAILING: [11/50]
NOW PASSING: [14/50]
STILL FAILING: [36/50]
PRECISION: 0.56
RECALL: 0.28
ACCURACY: 0.53
F1 SCORE: 0.37333333333333335
---------------------------------------
--- src/markup/__init__.py
+++ src/markup/__init__.py
@@ -1,16 +1,16 @@
 def remove_html_markup(s):
     tag = False
     quote = False
-    out = ""
-
+    out = ''
     for c in s:
-        if c == "<" and not quote:
+        if c == '<' and (not quote):
             tag = True
-        elif c == ">" and not quote:
+        else:
+            if c == '>' and (not quote):
+                tag = False
+            elif c == '"' or (c == "'" and tag):
+                quote = not quote
+            elif not tag:
+                out = out + c
             tag = False
-        elif c == '"' or c == "'" and tag:
-            quote = not quote
-        elif not tag:
-            out = out + c
-
-    return out
+    return out

____________________________________________________________________________________________________

