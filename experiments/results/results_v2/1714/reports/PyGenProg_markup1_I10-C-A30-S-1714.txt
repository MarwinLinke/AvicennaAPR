APPROACH: PyGenProg
SUBJECT: markup_1
Used 30 failing and 30 passing test cases from Avicenna in the fault localization
Used 30 failing and 30 passing test cases from Avicenna in the validation
In total 60 for fault localization and 60 for validation.
The gathering of test cases took 2.6043 seconds.
The repair ran for 688.1744 seconds.
The evaluation took 78.4865 seconds.
Was a valid patch found: False
BEST FITNESS: 0.6890909090909091
BEST F1 SCORE: 0.7857142857142857
Found a total of 1 patches.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

PATCHES (SORTED):
GeneticCandidate@tmp/markup_1(9)[0.69] Found 1 equivalent patches.
---------- Evaluation Matrix ----------
STILL PASSING: [49/50]
NOW FAILING: [1/50]
NOW PASSING: [33/50]
STILL FAILING: [17/50]
PRECISION: 0.9705882352941176
RECALL: 0.66
ACCURACY: 0.82
F1 SCORE: 0.7857142857142857
---------------------------------------
--- src/markup/__init__.py
+++ src/markup/__init__.py
@@ -1,16 +1,14 @@
 def remove_html_markup(s):
     tag = False
     quote = False
-    out = ""
-
+    out = ''
     for c in s:
-        if c == "<" and not quote:
+        if c == '<' and (not quote):
             tag = True
-        elif c == ">" and not quote:
+        elif c == '>' and (not quote):
             tag = False
-        elif c == '"' or c == "'" and tag:
-            quote = not quote
+        elif c == '"' or (c == "'" and tag):
+            out = out + c
         elif not tag:
             out = out + c
-
-    return out
+    return out

____________________________________________________________________________________________________

