APPROACH: PyGenProg
SUBJECT: markup_1
Used 50 failing and 50 passing test cases from Avicenna in the fault localization
Used 50 failing and 50 passing test cases from Avicenna in the validation
In total 100 for fault localization and 100 for validation.
The gathering of test cases took 3.3175 seconds.
The repair ran for 970.3087 seconds.
The evaluation took 88.2122 seconds.
Was a valid patch found: False
BEST FITNESS: 0.2636363636363636
BEST F1 SCORE: 0.27586206896551724
Found a total of 1 patches.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

PATCHES (SORTED):
GeneticCandidate@tmp/markup_1(7)[0.26] Found 1 equivalent patches.
---------- Evaluation Matrix ----------
STILL PASSING: [25/50]
NOW FAILING: [25/50]
NOW PASSING: [12/50]
STILL FAILING: [38/50]
PRECISION: 0.32432432432432434
RECALL: 0.24
ACCURACY: 0.37
F1 SCORE: 0.27586206896551724
---------------------------------------
--- src/markup/__init__.py
+++ src/markup/__init__.py
@@ -1,16 +1,14 @@
 def remove_html_markup(s):
     tag = False
-    quote = False
-    out = ""
-
+    pass
+    out = ''
     for c in s:
-        if c == "<" and not quote:
+        if c == '<' and (not quote):
             tag = True
-        elif c == ">" and not quote:
+        elif c == '>' and (not quote):
             tag = False
-        elif c == '"' or c == "'" and tag:
+        elif c == '"' or (c == "'" and tag):
             quote = not quote
         elif not tag:
             out = out + c
-
-    return out
+    return out

____________________________________________________________________________________________________

