APPROACH: PyGenProg
SUBJECT: markup_2
Used 5 failing and 5 passing test cases from Avicenna in the fault localization
Used 5 failing and 5 passing test cases from Avicenna in the validation
In total 10 for fault localization and 10 for validation.
The gathering of test cases took 4.3539 seconds.
The repair ran for 763.4101 seconds.
The evaluation took 120.7181 seconds.
Was a valid patch found: False
BEST FITNESS: 0.5818181818181818
BEST F1 SCORE: 0.7012987012987013
Found a total of 4 patches.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

PATCHES (SORTED):
GeneticCandidate@tmp/markup_2(7)[0.58]
---------- Evaluation Matrix ----------
STILL PASSING: [50/50]
NOW FAILING: [0/50]
NOW PASSING: [27/50]
STILL FAILING: [23/50]
PRECISION: 1.0
RECALL: 0.54
ACCURACY: 0.77
F1 SCORE: 0.7012987012987013
---------------------------------------
--- src/markup/__init__.py
+++ src/markup/__init__.py
@@ -1,16 +1,14 @@
 def remove_html_markup(s):
-    tag = True
+    tag = False
     quote = False
-    out = ""
-
+    out = ''
     for c in s:
-        if c == "<" and not quote:
+        if c == '<' and (not quote):
             tag = True
-        elif c == ">" and not quote:
+        elif c == '>' and (not quote):
             tag = False
-        elif (c == '"' or c == "'") and tag:  # <-- FIX
+        elif (c == '"' or c == "'") and tag:
             quote = not quote
         elif not tag:
             out = out + c
-
-    return out
+    return out

____________________________________________________________________________________________________

GeneticCandidate@tmp/markup_2(7)[0.58]
---------- Evaluation Matrix ----------
STILL PASSING: [50/50]
NOW FAILING: [0/50]
NOW PASSING: [27/50]
STILL FAILING: [23/50]
PRECISION: 1.0
RECALL: 0.54
ACCURACY: 0.77
F1 SCORE: 0.7012987012987013
---------------------------------------
--- src/markup/__init__.py
+++ src/markup/__init__.py
@@ -1,16 +1,15 @@
 def remove_html_markup(s):
     tag = True
     quote = False
-    out = ""
-
+    out = ''
+    tag = False
     for c in s:
-        if c == "<" and not quote:
+        if c == '<' and (not quote):
             tag = True
-        elif c == ">" and not quote:
+        elif c == '>' and (not quote):
             tag = False
-        elif (c == '"' or c == "'") and tag:  # <-- FIX
+        elif (c == '"' or c == "'") and tag:
             quote = not quote
         elif not tag:
             out = out + c
-
-    return out
+    return out

____________________________________________________________________________________________________

GeneticCandidate@tmp/markup_2(6)[0.37]
---------- Evaluation Matrix ----------
STILL PASSING: [25/50]
NOW FAILING: [25/50]
NOW PASSING: [18/50]
STILL FAILING: [32/50]
PRECISION: 0.4186046511627907
RECALL: 0.36
ACCURACY: 0.43
F1 SCORE: 0.38709677419354843
---------------------------------------
--- src/markup/__init__.py
+++ src/markup/__init__.py
@@ -1,16 +1,14 @@
 def remove_html_markup(s):
     tag = True
     quote = False
-    out = ""
-
+    out = ''
     for c in s:
-        if c == "<" and not quote:
+        if c == '<' and (not quote):
             tag = True
-        elif c == ">" and not quote:
+        elif c == '>' and (not quote):
             tag = False
-        elif (c == '"' or c == "'") and tag:  # <-- FIX
-            quote = not quote
+        elif (c == '"' or c == "'") and tag:
+            tag = True
         elif not tag:
             out = out + c
-
-    return out
+    return out

____________________________________________________________________________________________________

GeneticCandidate@tmp/markup_2(6)[0.37]
---------- Evaluation Matrix ----------
STILL PASSING: [25/50]
NOW FAILING: [25/50]
NOW PASSING: [18/50]
STILL FAILING: [32/50]
PRECISION: 0.4186046511627907
RECALL: 0.36
ACCURACY: 0.43
F1 SCORE: 0.38709677419354843
---------------------------------------
--- src/markup/__init__.py
+++ src/markup/__init__.py
@@ -1,16 +1,16 @@
 def remove_html_markup(s):
     tag = True
     quote = False
-    out = ""
-
+    out = ''
     for c in s:
-        if c == "<" and not quote:
+        if c == '<' and (not quote):
             tag = True
-        elif c == ">" and not quote:
+        elif c == '>' and (not quote):
             tag = False
-        elif (c == '"' or c == "'") and tag:  # <-- FIX
-            quote = not quote
-        elif not tag:
-            out = out + c
-
-    return out
+        else:
+            if (c == '"' or c == "'") and tag:
+                quote = not quote
+            elif not tag:
+                out = out + c
+            quote = False
+    return out

____________________________________________________________________________________________________

