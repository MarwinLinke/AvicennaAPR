APPROACH: PyGenProg
SUBJECT: markup_2
Used 1 failing and 10 passing test cases from Tests4py in the fault localization
Used 1 failing and 10 passing test cases from Tests4py in the validation
In total 11 for fault localization and 11 for validation.
The gathering of test cases took 2.9394 seconds.
The repair ran for 341.0305 seconds.
The evaluation took 65.2577 seconds.
Was a valid patch found: False
BEST FITNESS: 0.5818181818181818
BEST F1 SCORE: 0.7012987012987013
Found a total of 1 patches.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

PATCHES (SORTED):
GeneticCandidate@tmp/markup_2(6)[0.58]
---------- Evaluation Matrix ----------
STILL PASSING: [50/50]
NOW FAILING: [0/50]
NOW PASSING: [27/50]
STILL FAILING: [23/50]
PRECISION: 1.0
RECALL: 0.54
ACCURACY: 0.77
F1 SCORE: 0.7012987012987013
---------------------------------------
--- src/markup/__init__.py
+++ src/markup/__init__.py
@@ -1,16 +1,15 @@
 def remove_html_markup(s):
     tag = True
     quote = False
-    out = ""
-
+    tag = False
+    out = ''
     for c in s:
-        if c == "<" and not quote:
+        if c == '<' and (not quote):
             tag = True
-        elif c == ">" and not quote:
+        elif c == '>' and (not quote):
             tag = False
-        elif (c == '"' or c == "'") and tag:  # <-- FIX
+        elif (c == '"' or c == "'") and tag:
             quote = not quote
         elif not tag:
             out = out + c
-
-    return out
+    return out

____________________________________________________________________________________________________

