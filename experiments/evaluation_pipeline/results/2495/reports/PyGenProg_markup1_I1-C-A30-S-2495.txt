APPROACH: PyGenProg
SUBJECT: markup_1
Used 30 failing and 30 passing test cases from Avicenna in the fault localization
Used 30 failing and 30 passing test cases from Avicenna in the validation
In total 60 for fault localization and 60 for validation.
The gathering of test cases took 2.5825 seconds.
The repair ran for 385.0797 seconds.
The evaluation took 68.8835 seconds.
Was a valid patch found: False
BEST FITNESS: 0.5818181818181818
BEST F1 SCORE: 0.7012987012987013
Found a total of 1 patches.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

PATCHES (SORTED):
GeneticCandidate@tmp/markup_1(2)[0.58]
---------- Evaluation Matrix ----------
STILL PASSING: [50/50]
NOW FAILING: [0/50]
NOW PASSING: [27/50]
STILL FAILING: [23/50]
PRECISION: 1.0
RECALL: 0.54
ACCURACY: 0.77
F1 SCORE: 0.7012987012987013
---------------------------------------
--- src/markup/__init__.py
+++ src/markup/__init__.py
@@ -1,16 +1,14 @@
 def remove_html_markup(s):
     tag = False
     quote = False
-    out = ""
-
+    out = ''
     for c in s:
-        if c == "<" and not quote:
+        if c == '<' and (not quote):
             tag = True
-        elif c == ">" and not quote:
+        elif c == '>' and (not quote):
             tag = False
-        elif c == '"' or c == "'" and tag:
-            quote = not quote
+        elif c == '"' or (c == "'" and tag):
+            out = out + c
         elif not tag:
             out = out + c
-
-    return out
+    return out

____________________________________________________________________________________________________

