APPROACH: PyGenProg
SUBJECT: markup_1
Used 1 failing and 10 passing test cases from Tests4py in the fault localization
Used 1 failing and 10 passing test cases from Tests4py in the validation
In total 11 for fault localization and 11 for validation.
The gathering of test cases took 3.3191 seconds.
The repair ran for 410.0734 seconds.
The evaluation took 68.4530 seconds.
Was a valid patch found: False
BEST FITNESS: 0.5454545454545454
BEST F1 SCORE: 0.6666666666666666
Found a total of 1 patches.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

PATCHES (SORTED):
GeneticCandidate@tmp/markup_1(10)[0.55]
---------- Evaluation Matrix ----------
STILL PASSING: [50/50]
NOW FAILING: [0/50]
NOW PASSING: [25/50]
STILL FAILING: [25/50]
PRECISION: 1.0
RECALL: 0.5
ACCURACY: 0.75
F1 SCORE: 0.6666666666666666
---------------------------------------
--- src/markup/__init__.py
+++ src/markup/__init__.py
@@ -1,16 +1,14 @@
 def remove_html_markup(s):
     tag = False
     quote = False
-    out = ""
-
+    out = ''
     for c in s:
-        if c == "<" and not quote:
+        if c == '<' and (not quote):
             tag = True
-        elif c == ">" and not quote:
+        elif c == '>' and (not quote):
             tag = False
-        elif c == '"' or c == "'" and tag:
-            quote = not quote
+        elif c == '"' or (c == "'" and tag):
+            out = out + c
         elif not tag:
             out = out + c
-
-    return out
+    return out

____________________________________________________________________________________________________

