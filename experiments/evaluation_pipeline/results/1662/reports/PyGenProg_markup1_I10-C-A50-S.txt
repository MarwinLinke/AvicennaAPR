APPROACH: PyGenProg
SUBJECT: markup_1
Used 50 failing and 50 passing test cases from Avicenna in the fault localization
Used 50 failing and 50 passing test cases from Avicenna in the validation
In total 100 for fault localization and 100 for validation.
The gathering of test cases took 7.7526 seconds.
The repair ran for 2258.1169 seconds.
The evaluation took 210.0850 seconds.
Was a valid patch found: False
BEST FITNESS: 0.18363636363636363
BEST F1 SCORE: 0.1836734693877551
Found a total of 1 patches.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

PATCHES (SORTED):
GeneticCandidate@tmp/markup_1(10)[0.18]
---------- Evaluation Matrix ----------
STILL PASSING: [11/50]
NOW FAILING: [39/50]
NOW PASSING: [9/50]
STILL FAILING: [41/50]
PRECISION: 0.1875
RECALL: 0.18
ACCURACY: 0.2
F1 SCORE: 0.1836734693877551
---------------------------------------
--- src/markup/__init__.py
+++ src/markup/__init__.py
@@ -1,16 +1,14 @@
 def remove_html_markup(s):
     tag = False
     quote = False
-    out = ""
-
+    out = ''
     for c in s:
-        if c == "<" and not quote:
+        if c == '<' and (not quote):
             tag = True
-        elif c == ">" and not quote:
+        elif c == '>' and (not quote):
             tag = False
-        elif c == '"' or c == "'" and tag:
+        elif c == '"' or (c == "'" and tag):
             quote = not quote
-        elif not tag:
-            out = out + c
-
-    return out
+        else:
+            quote = False
+    return out

____________________________________________________________________________________________________

