APPROACH: PyGenProg
SUBJECT: middle_1
Used 1 failing and 10 passing test cases from Tests4py in the fault localization
Used 5 failing and 5 passing test cases from Avicenna in the validation
In total 11 for fault localization and 10 for validation.
The gathering of test cases took 14.7974 seconds.
The repair ran for 1171.5946 seconds.
The evaluation took 960.7058 seconds.
Was a valid patch found: False
BEST FITNESS: 0.09090909090909091
BEST F1 SCORE: 0.0
Found a total of 24 patches.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

PATCHES (SORTED):
GeneticCandidate@tmp/middle_1(1)[0.09]
---------- Evaluation Matrix ----------
STILL PASSING: [50/50]
NOW FAILING: [0/50]
NOW PASSING: [0/50]
STILL FAILING: [50/50]
PRECISION: 0.0
RECALL: 0.0
ACCURACY: 0.5
F1 SCORE: 0.0
---------------------------------------
--- src/middle/cli.py
+++ src/middle/cli.py
@@ -1,7 +1,5 @@
 import sys
-
 import middle
-
 
 def main(*args: str, stdout=sys.stdout, stderr=sys.stderr):
     if stdout is not None:
@@ -9,9 +7,6 @@
     if stderr is not None:
         sys.stderr = stderr
     args = args or sys.argv[1:]
-    assert len(args) == 3, "wrong number of arguments"
+    assert len(args) == 3, 'wrong number of arguments'
     print(middle.middle(*list(map(int, args))))
-
-
-if __name__ == "__main__":
-    main()
+pass

____________________________________________________________________________________________________

GeneticCandidate@tmp/middle_1(1)[0.09]
---------- Evaluation Matrix ----------
STILL PASSING: [50/50]
NOW FAILING: [0/50]
NOW PASSING: [0/50]
STILL FAILING: [50/50]
PRECISION: 0.0
RECALL: 0.0
ACCURACY: 0.5
F1 SCORE: 0.0
---------------------------------------
--- src/middle/__init__.py
+++ src/middle/__init__.py
@@ -5,9 +5,9 @@
             m = y
         elif x < z:
             m = y
-    else:
-        if x > y:
-            m = y
-        elif x > z:
-            m = x
+    elif x > y:
+        m = y
+    elif x > z:
+        m = x
     return m
+    args = args or sys.argv[1:]

____________________________________________________________________________________________________

GeneticCandidate@tmp/middle_1(2)[0.09]
---------- Evaluation Matrix ----------
STILL PASSING: [50/50]
NOW FAILING: [0/50]
NOW PASSING: [0/50]
STILL FAILING: [50/50]
PRECISION: 0.0
RECALL: 0.0
ACCURACY: 0.5
F1 SCORE: 0.0
---------------------------------------
--- src/middle/__init__.py
+++ src/middle/__init__.py
@@ -5,9 +5,9 @@
             m = y
         elif x < z:
             m = y
-    else:
-        if x > y:
-            m = y
-        elif x > z:
-            m = x
+    elif x > y:
+        m = y
+    elif x > z:
+        m = x
     return m
+    import sys

____________________________________________________________________________________________________

GeneticCandidate@tmp/middle_1(1)[0.09]
---------- Evaluation Matrix ----------
STILL PASSING: [50/50]
NOW FAILING: [0/50]
NOW PASSING: [0/50]
STILL FAILING: [50/50]
PRECISION: 0.0
RECALL: 0.0
ACCURACY: 0.5
F1 SCORE: 0.0
---------------------------------------
--- src/middle/cli.py
+++ src/middle/cli.py
@@ -1,7 +1,6 @@
 import sys
-
+import sys
 import middle
-
 
 def main(*args: str, stdout=sys.stdout, stderr=sys.stderr):
     if stdout is not None:
@@ -9,9 +8,7 @@
     if stderr is not None:
         sys.stderr = stderr
     args = args or sys.argv[1:]
-    assert len(args) == 3, "wrong number of arguments"
+    assert len(args) == 3, 'wrong number of arguments'
     print(middle.middle(*list(map(int, args))))
-
-
-if __name__ == "__main__":
-    main()
+if __name__ == '__main__':
+    main()

____________________________________________________________________________________________________

GeneticCandidate@tmp/middle_1(2)[0.09]
---------- Evaluation Matrix ----------
STILL PASSING: [50/50]
NOW FAILING: [0/50]
NOW PASSING: [0/50]
STILL FAILING: [50/50]
PRECISION: 0.0
RECALL: 0.0
ACCURACY: 0.5
F1 SCORE: 0.0
---------------------------------------
--- src/middle/__init__.py
+++ src/middle/__init__.py
@@ -1,13 +1,21 @@
 def middle(x, y, z):
     m = z
     if y < z:
+        if y < z:
+            if x < y:
+                m = y
+            elif x < z:
+                m = y
+        elif x > y:
+            m = y
+        elif x > z:
+            m = x
         if x < y:
             m = y
         elif x < z:
             m = y
-    else:
-        if x > y:
-            m = y
-        elif x > z:
-            m = x
-    return m
+    elif x > y:
+        m = y
+    elif x > z:
+        m = x
+    return m

____________________________________________________________________________________________________

GeneticCandidate@tmp/middle_1(0)[0.09]
---------- Evaluation Matrix ----------
STILL PASSING: [50/50]
NOW FAILING: [0/50]
NOW PASSING: [0/50]
STILL FAILING: [50/50]
PRECISION: 0.0
RECALL: 0.0
ACCURACY: 0.5
F1 SCORE: 0.0
---------------------------------------
Patch could not be printed.

____________________________________________________________________________________________________

GeneticCandidate@tmp/middle_1(2)[0.09]
---------- Evaluation Matrix ----------
STILL PASSING: [50/50]
NOW FAILING: [0/50]
NOW PASSING: [0/50]
STILL FAILING: [50/50]
PRECISION: 0.0
RECALL: 0.0
ACCURACY: 0.5
F1 SCORE: 0.0
---------------------------------------
--- src/middle/__init__.py
+++ src/middle/__init__.py
@@ -5,9 +5,9 @@
             m = y
         elif x < z:
             m = y
-    else:
-        if x > y:
-            m = y
-        elif x > z:
+    elif x > y:
+        m = y
+    elif x > z:
+        if x > z:
             m = x
-    return m
+    return m

____________________________________________________________________________________________________

GeneticCandidate@tmp/middle_1(1)[0.09]
---------- Evaluation Matrix ----------
STILL PASSING: [50/50]
NOW FAILING: [0/50]
NOW PASSING: [0/50]
STILL FAILING: [50/50]
PRECISION: 0.0
RECALL: 0.0
ACCURACY: 0.5
F1 SCORE: 0.0
---------------------------------------
--- src/middle/__init__.py
+++ src/middle/__init__.py
@@ -1,13 +1,14 @@
 def middle(x, y, z):
+    if x > z:
+        m = x
     m = z
     if y < z:
         if x < y:
             m = y
         elif x < z:
             m = y
-    else:
-        if x > y:
-            m = y
-        elif x > z:
-            m = x
-    return m
+    elif x > y:
+        m = y
+    elif x > z:
+        m = x
+    return m

____________________________________________________________________________________________________

GeneticCandidate@tmp/middle_1(1)[0.08]
No tests4py report was found, matrix could not be calculated.
--- src/middle/__init__.py
+++ src/middle/__init__.py
@@ -5,9 +5,8 @@
             m = y
         elif x < z:
             m = y
-    else:
-        if x > y:
-            m = y
-        elif x > z:
-            m = x
-    return m
+    elif x > y:
+        pass
+    elif x > z:
+        m = x
+    return m

____________________________________________________________________________________________________

GeneticCandidate@tmp/middle_1(2)[0.08]
No tests4py report was found, matrix could not be calculated.
--- src/middle/__init__.py
+++ src/middle/__init__.py
@@ -5,9 +5,8 @@
             m = y
         elif x < z:
             m = y
-    else:
-        if x > y:
-            m = y
-        elif x > z:
-            m = x
-    return m
+    elif x > y:
+        pass
+    elif x > z:
+        m = x
+    return m

____________________________________________________________________________________________________

GeneticCandidate@tmp/middle_1(1)[0.07]
---------- Evaluation Matrix ----------
STILL PASSING: [38/50]
NOW FAILING: [12/50]
NOW PASSING: [0/50]
STILL FAILING: [50/50]
PRECISION: 0.0
RECALL: 0.0
ACCURACY: 0.38
F1 SCORE: 0.0
---------------------------------------
--- src/middle/__init__.py
+++ src/middle/__init__.py
@@ -1,13 +1,9 @@
 def middle(x, y, z):
     m = z
     if y < z:
-        if x < y:
-            m = y
-        elif x < z:
-            m = y
-    else:
-        if x > y:
-            m = y
-        elif x > z:
-            m = x
-    return m
+        pass
+    elif x > y:
+        m = y
+    elif x > z:
+        m = x
+    return m

____________________________________________________________________________________________________

GeneticCandidate@tmp/middle_1(2)[0.07]
---------- Evaluation Matrix ----------
STILL PASSING: [37/50]
NOW FAILING: [13/50]
NOW PASSING: [0/50]
STILL FAILING: [50/50]
PRECISION: 0.0
RECALL: 0.0
ACCURACY: 0.37
F1 SCORE: 0.0
---------------------------------------
--- src/middle/__init__.py
+++ src/middle/__init__.py
@@ -5,9 +5,8 @@
             m = y
         elif x < z:
             m = y
-    else:
-        if x > y:
-            m = y
-        elif x > z:
-            m = x
-    return m
+    elif x > y:
+        m = y
+    elif x > z:
+        import sys
+    return m

____________________________________________________________________________________________________

GeneticCandidate@tmp/middle_1(2)[0.00]
No tests4py report was found, matrix could not be calculated.
--- src/middle/cli.py
+++ src/middle/cli.py
@@ -1,7 +1,5 @@
 import sys
-
-import middle
-
+pass
 
 def main(*args: str, stdout=sys.stdout, stderr=sys.stderr):
     if stdout is not None:
@@ -9,9 +7,7 @@
     if stderr is not None:
         sys.stderr = stderr
     args = args or sys.argv[1:]
-    assert len(args) == 3, "wrong number of arguments"
+    assert len(args) == 3, 'wrong number of arguments'
     print(middle.middle(*list(map(int, args))))
-
-
-if __name__ == "__main__":
-    main()
+if __name__ == '__main__':
+    main()

____________________________________________________________________________________________________

GeneticCandidate@tmp/middle_1(1)[0.00]
No tests4py report was found, matrix could not be calculated.
--- src/middle/__init__.py
+++ src/middle/__init__.py
@@ -5,9 +5,8 @@
             m = y
         elif x < z:
             m = y
+    elif x > y:
+        m = y
     else:
-        if x > y:
-            m = y
-        elif x > z:
-            m = x
-    return m
+        print(middle.middle(*list(map(int, args))))
+    return m

____________________________________________________________________________________________________

GeneticCandidate@tmp/middle_1(2)[0.00]
No tests4py report was found, matrix could not be calculated.
--- src/middle/cli.py
+++ src/middle/cli.py
@@ -1,7 +1,5 @@
-import sys
-
+m = y
 import middle
-
 
 def main(*args: str, stdout=sys.stdout, stderr=sys.stderr):
     if stdout is not None:
@@ -9,9 +7,7 @@
     if stderr is not None:
         sys.stderr = stderr
     args = args or sys.argv[1:]
-    assert len(args) == 3, "wrong number of arguments"
+    assert len(args) == 3, 'wrong number of arguments'
     print(middle.middle(*list(map(int, args))))
-
-
-if __name__ == "__main__":
-    main()
+if __name__ == '__main__':
+    main()

____________________________________________________________________________________________________

GeneticCandidate@tmp/middle_1(1)[0.00]
No tests4py report was found, matrix could not be calculated.
--- src/middle/__init__.py
+++ src/middle/__init__.py
@@ -5,9 +5,9 @@
             m = y
         elif x < z:
             m = y
-    else:
-        if x > y:
-            m = y
-        elif x > z:
-            m = x
-    return m
+    elif x > y:
+        args = args or sys.argv[1:]
+        m = y
+    elif x > z:
+        m = x
+    return m

____________________________________________________________________________________________________

GeneticCandidate@tmp/middle_1(2)[0.00]
No tests4py report was found, matrix could not be calculated.
--- src/middle/cli.py
+++ src/middle/cli.py
@@ -1,7 +1,5 @@
-import sys
-
+args = args or sys.argv[1:]
 import middle
-
 
 def main(*args: str, stdout=sys.stdout, stderr=sys.stderr):
     if stdout is not None:
@@ -9,9 +7,7 @@
     if stderr is not None:
         sys.stderr = stderr
     args = args or sys.argv[1:]
-    assert len(args) == 3, "wrong number of arguments"
+    assert len(args) == 3, 'wrong number of arguments'
     print(middle.middle(*list(map(int, args))))
-
-
-if __name__ == "__main__":
-    main()
+if __name__ == '__main__':
+    main()

____________________________________________________________________________________________________

GeneticCandidate@tmp/middle_1(1)[0.00]
No tests4py report was found, matrix could not be calculated.
--- src/middle/cli.py
+++ src/middle/cli.py
@@ -1,17 +1,14 @@
 import sys
-
 import middle
-
 
 def main(*args: str, stdout=sys.stdout, stderr=sys.stderr):
     if stdout is not None:
         sys.stdout = stdout
     if stderr is not None:
         sys.stderr = stderr
+        import sys
     args = args or sys.argv[1:]
-    assert len(args) == 3, "wrong number of arguments"
+    assert len(args) == 3, 'wrong number of arguments'
     print(middle.middle(*list(map(int, args))))
-
-
-if __name__ == "__main__":
-    main()
+if __name__ == '__main__':
+    main()

____________________________________________________________________________________________________

GeneticCandidate@tmp/middle_1(1)[0.00]
No tests4py report was found, matrix could not be calculated.
--- src/middle/__init__.py
+++ src/middle/__init__.py
@@ -1,13 +1,12 @@
 def middle(x, y, z):
-    m = z
+    pass
     if y < z:
         if x < y:
             m = y
         elif x < z:
             m = y
-    else:
-        if x > y:
-            m = y
-        elif x > z:
-            m = x
-    return m
+    elif x > y:
+        m = y
+    elif x > z:
+        m = x
+    return m

____________________________________________________________________________________________________

GeneticCandidate@tmp/middle_1(1)[0.00]
No tests4py report was found, matrix could not be calculated.
--- src/middle/cli.py
+++ src/middle/cli.py
@@ -1,7 +1,5 @@
 import sys
-
 import middle
-
 
 def main(*args: str, stdout=sys.stdout, stderr=sys.stderr):
     if stdout is not None:
@@ -9,9 +7,8 @@
     if stderr is not None:
         sys.stderr = stderr
     args = args or sys.argv[1:]
-    assert len(args) == 3, "wrong number of arguments"
+    if x < z:
+        m = y
     print(middle.middle(*list(map(int, args))))
-
-
-if __name__ == "__main__":
-    main()
+if __name__ == '__main__':
+    main()

____________________________________________________________________________________________________

GeneticCandidate@tmp/middle_1(2)[0.00]
No tests4py report was found, matrix could not be calculated.
--- src/middle/cli.py
+++ src/middle/cli.py
@@ -1,17 +1,14 @@
 import sys
-
 import middle
-
 
 def main(*args: str, stdout=sys.stdout, stderr=sys.stderr):
     if stdout is not None:
         sys.stdout = stdout
     if stderr is not None:
         sys.stderr = stderr
+        m = y
     args = args or sys.argv[1:]
-    assert len(args) == 3, "wrong number of arguments"
+    assert len(args) == 3, 'wrong number of arguments'
     print(middle.middle(*list(map(int, args))))
-
-
-if __name__ == "__main__":
-    main()
+if __name__ == '__main__':
+    main()

____________________________________________________________________________________________________

GeneticCandidate@tmp/middle_1(2)[0.00]
No tests4py report was found, matrix could not be calculated.
--- src/middle/cli.py
+++ src/middle/cli.py
@@ -1,17 +1,14 @@
 import sys
-
 import middle
-
 
 def main(*args: str, stdout=sys.stdout, stderr=sys.stderr):
     if stdout is not None:
         sys.stdout = stdout
     if stderr is not None:
+        m = y
         sys.stderr = stderr
     args = args or sys.argv[1:]
-    assert len(args) == 3, "wrong number of arguments"
+    assert len(args) == 3, 'wrong number of arguments'
     print(middle.middle(*list(map(int, args))))
-
-
-if __name__ == "__main__":
-    main()
+if __name__ == '__main__':
+    main()

____________________________________________________________________________________________________

GeneticCandidate@tmp/middle_1(2)[0.00]
No tests4py report was found, matrix could not be calculated.
--- src/middle/__init__.py
+++ src/middle/__init__.py
@@ -1,13 +1,13 @@
 def middle(x, y, z):
+    sys.stderr = stderr
     m = z
     if y < z:
         if x < y:
             m = y
         elif x < z:
             m = y
-    else:
-        if x > y:
-            m = y
-        elif x > z:
-            m = x
-    return m
+    elif x > y:
+        m = y
+    elif x > z:
+        m = x
+    return m

____________________________________________________________________________________________________

GeneticCandidate@tmp/middle_1(1)[0.00]
No tests4py report was found, matrix could not be calculated.
--- src/middle/__init__.py
+++ src/middle/__init__.py
@@ -1,13 +1,12 @@
 def middle(x, y, z):
-    m = z
+    return m
     if y < z:
         if x < y:
             m = y
         elif x < z:
             m = y
-    else:
-        if x > y:
-            m = y
-        elif x > z:
-            m = x
-    return m
+    elif x > y:
+        m = y
+    elif x > z:
+        m = x
+    return m

____________________________________________________________________________________________________

