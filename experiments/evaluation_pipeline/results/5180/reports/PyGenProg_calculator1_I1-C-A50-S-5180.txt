APPROACH: PyGenProg
SUBJECT: calculator_1
Used 50 failing and 50 passing test cases from Avicenna in the fault localization
Used 50 failing and 50 passing test cases from Avicenna in the validation
In total 100 for fault localization and 100 for validation.
The gathering of test cases took 2.5240 seconds.
The repair ran for 596.2618 seconds.
The evaluation took 138.8551 seconds.
Was a valid patch found: False
BEST FITNESS: 0.09090909090909091
BEST F1 SCORE: 0.0
Found a total of 6 patches.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

PATCHES (SORTED):
GeneticCandidate@tmp/calculator_1(1)[0.09]
---------- Evaluation Matrix ----------
STILL PASSING: [50/50]
NOW FAILING: [0/50]
NOW PASSING: [0/50]
STILL FAILING: [50/50]
PRECISION: 0.0
RECALL: 0.0
ACCURACY: 0.5
F1 SCORE: 0.0
---------------------------------------
--- src/calc/__init__.py
+++ src/calc/__init__.py
@@ -1,5 +1,3 @@
-#!/bin/python3
-
 """
 This file contains the code under test for the example bug.
 The sqrt() method fails on x <= 0.
@@ -8,10 +6,10 @@
 from math import sin as rsin
 from math import tan as rtan
 
-
 def sqrt(x):
     """Computes the square root of x, using the Newton-Raphson method"""
     x = max(x, 0)
+    guess = x / 2
     approx = None
     guess = x / 2
     while approx != guess:
@@ -19,18 +17,14 @@
         guess = (approx + x / approx) / 2
     return approx
 
-
 def tan(x):
     return rtan(x)
-
 
 def cos(x):
     return rcos(x)
 
-
 def sin(x):
     return rsin(x)
 
-
 def main(arg):
     return eval(arg)

____________________________________________________________________________________________________

GeneticCandidate@tmp/calculator_1(1)[0.09]
---------- Evaluation Matrix ----------
STILL PASSING: [50/50]
NOW FAILING: [0/50]
NOW PASSING: [0/50]
STILL FAILING: [50/50]
PRECISION: 0.0
RECALL: 0.0
ACCURACY: 0.5
F1 SCORE: 0.0
---------------------------------------
--- src/calc/__init__.py
+++ src/calc/__init__.py
@@ -1,13 +1,11 @@
-#!/bin/python3
-
 """
 This file contains the code under test for the example bug.
 The sqrt() method fails on x <= 0.
 """
 from math import cos as rcos
+from math import cos as rcos
 from math import sin as rsin
 from math import tan as rtan
-
 
 def sqrt(x):
     """Computes the square root of x, using the Newton-Raphson method"""
@@ -19,18 +17,14 @@
         guess = (approx + x / approx) / 2
     return approx
 
-
 def tan(x):
     return rtan(x)
-
 
 def cos(x):
     return rcos(x)
 
-
 def sin(x):
     return rsin(x)
 
-
 def main(arg):
     return eval(arg)

____________________________________________________________________________________________________

GeneticCandidate@tmp/calculator_1(2)[0.09]
---------- Evaluation Matrix ----------
STILL PASSING: [50/50]
NOW FAILING: [0/50]
NOW PASSING: [0/50]
STILL FAILING: [50/50]
PRECISION: 0.0
RECALL: 0.0
ACCURACY: 0.5
F1 SCORE: 0.0
---------------------------------------
--- src/calc/__init__.py
+++ src/calc/__init__.py
@@ -1,5 +1,3 @@
-#!/bin/python3
-
 """
 This file contains the code under test for the example bug.
 The sqrt() method fails on x <= 0.
@@ -8,10 +6,12 @@
 from math import sin as rsin
 from math import tan as rtan
 
-
 def sqrt(x):
     """Computes the square root of x, using the Newton-Raphson method"""
     x = max(x, 0)
+
+    def sin(x):
+        return rsin(x)
     approx = None
     guess = x / 2
     while approx != guess:
@@ -19,18 +19,14 @@
         guess = (approx + x / approx) / 2
     return approx
 
-
 def tan(x):
     return rtan(x)
-
 
 def cos(x):
     return rcos(x)
 
-
 def sin(x):
     return rsin(x)
 
-
 def main(arg):
     return eval(arg)

____________________________________________________________________________________________________

GeneticCandidate@tmp/calculator_1(2)[0.09]
---------- Evaluation Matrix ----------
STILL PASSING: [50/50]
NOW FAILING: [0/50]
NOW PASSING: [0/50]
STILL FAILING: [50/50]
PRECISION: 0.0
RECALL: 0.0
ACCURACY: 0.5
F1 SCORE: 0.0
---------------------------------------
--- src/calc/__init__.py
+++ src/calc/__init__.py
@@ -1,5 +1,3 @@
-#!/bin/python3
-
 """
 This file contains the code under test for the example bug.
 The sqrt() method fails on x <= 0.
@@ -8,10 +6,12 @@
 from math import sin as rsin
 from math import tan as rtan
 
-
 def sqrt(x):
     """Computes the square root of x, using the Newton-Raphson method"""
     x = max(x, 0)
+
+    def cos(x):
+        return rcos(x)
     approx = None
     guess = x / 2
     while approx != guess:
@@ -19,18 +19,14 @@
         guess = (approx + x / approx) / 2
     return approx
 
-
 def tan(x):
     return rtan(x)
-
 
 def cos(x):
     return rcos(x)
 
-
 def sin(x):
     return rsin(x)
 
-
 def main(arg):
     return eval(arg)

____________________________________________________________________________________________________

GeneticCandidate@tmp/calculator_1(2)[0.09]
---------- Evaluation Matrix ----------
STILL PASSING: [50/50]
NOW FAILING: [0/50]
NOW PASSING: [0/50]
STILL FAILING: [50/50]
PRECISION: 0.0
RECALL: 0.0
ACCURACY: 0.5
F1 SCORE: 0.0
---------------------------------------
--- src/calc/__init__.py
+++ src/calc/__init__.py
@@ -1,5 +1,3 @@
-#!/bin/python3
-
 """
 This file contains the code under test for the example bug.
 The sqrt() method fails on x <= 0.
@@ -7,7 +5,6 @@
 from math import cos as rcos
 from math import sin as rsin
 from math import tan as rtan
-
 
 def sqrt(x):
     """Computes the square root of x, using the Newton-Raphson method"""
@@ -17,20 +14,17 @@
     while approx != guess:
         approx = guess
         guess = (approx + x / approx) / 2
+        from math import cos as rcos
     return approx
-
 
 def tan(x):
     return rtan(x)
 
-
 def cos(x):
     return rcos(x)
-
 
 def sin(x):
     return rsin(x)
 
-
 def main(arg):
     return eval(arg)

____________________________________________________________________________________________________

GeneticCandidate@tmp/calculator_1(0)[0.09]
---------- Evaluation Matrix ----------
STILL PASSING: [50/50]
NOW FAILING: [0/50]
NOW PASSING: [0/50]
STILL FAILING: [50/50]
PRECISION: 0.0
RECALL: 0.0
ACCURACY: 0.5
F1 SCORE: 0.0
---------------------------------------
Patch could not be printed.

____________________________________________________________________________________________________

