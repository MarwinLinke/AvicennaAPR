APPROACH: PyGenProg
SUBJECT: markup_1
Used 5 failing and 5 passing test cases from Avicenna in the fault localization
Used 5 failing and 5 passing test cases from Avicenna in the validation
In total 10 for fault localization and 10 for validation.
The gathering of test cases took 3.3183 seconds.
The repair ran for 615.7408 seconds.
The evaluation took 66.9042 seconds.
Was a valid patch found: False
BEST FITNESS: 0.09090909090909091
BEST F1 SCORE: 0.0851063829787234
Found a total of 1 patches.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

PATCHES (SORTED):
GeneticCandidate@tmp/markup_1(7)[0.09]
---------- Evaluation Matrix ----------
STILL PASSING: [10/50]
NOW FAILING: [40/50]
NOW PASSING: [4/50]
STILL FAILING: [46/50]
PRECISION: 0.09090909090909091
RECALL: 0.08
ACCURACY: 0.14
F1 SCORE: 0.0851063829787234
---------------------------------------
--- src/markup/__init__.py
+++ src/markup/__init__.py
@@ -1,16 +1,14 @@
 def remove_html_markup(s):
     tag = False
     quote = False
-    out = ""
-
+    out = ''
     for c in s:
-        if c == "<" and not quote:
-            tag = True
-        elif c == ">" and not quote:
+        if c == '<' and (not quote):
+            out = ''
+        elif c == '>' and (not quote):
             tag = False
-        elif c == '"' or c == "'" and tag:
+        elif c == '"' or (c == "'" and tag):
             quote = not quote
         elif not tag:
             out = out + c
-
-    return out
+    return out

____________________________________________________________________________________________________

