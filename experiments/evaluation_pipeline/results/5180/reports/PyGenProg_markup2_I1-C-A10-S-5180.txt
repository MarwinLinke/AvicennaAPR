APPROACH: PyGenProg
SUBJECT: markup_2
Used 10 failing and 10 passing test cases from Avicenna in the fault localization
Used 10 failing and 10 passing test cases from Avicenna in the validation
In total 20 for fault localization and 20 for validation.
The gathering of test cases took 2.7928 seconds.
The repair ran for 332.6042 seconds.
The evaluation took 63.9830 seconds.
Was a valid patch found: False
BEST FITNESS: 0.3563636363636364
BEST F1 SCORE: 0.35294117647058826
Found a total of 1 patches.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

PATCHES (SORTED):
GeneticCandidate@tmp/markup_2(2)[0.36]
---------- Evaluation Matrix ----------
STILL PASSING: [16/50]
NOW FAILING: [34/50]
NOW PASSING: [18/50]
STILL FAILING: [32/50]
PRECISION: 0.34615384615384615
RECALL: 0.36
ACCURACY: 0.34
F1 SCORE: 0.35294117647058826
---------------------------------------
--- src/markup/__init__.py
+++ src/markup/__init__.py
@@ -1,16 +1,23 @@
 def remove_html_markup(s):
     tag = True
     quote = False
-    out = ""
-
+    out = ''
     for c in s:
-        if c == "<" and not quote:
+        if c == '<' and (not quote):
             tag = True
-        elif c == ">" and not quote:
+        elif c == '>' and (not quote):
             tag = False
-        elif (c == '"' or c == "'") and tag:  # <-- FIX
+        elif (c == '"' or c == "'") and tag:
             quote = not quote
         elif not tag:
             out = out + c
-
-    return out
+    for c in s:
+        if c == '<' and (not quote):
+            tag = True
+        elif c == '>' and (not quote):
+            tag = False
+        elif (c == '"' or c == "'") and tag:
+            quote = not quote
+        elif not tag:
+            out = out + c
+    return out

____________________________________________________________________________________________________

