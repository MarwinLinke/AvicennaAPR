APPROACH: PyGenProg
SUBJECT: markup_2
Used 5 failing and 5 passing test cases from Avicenna in the fault localization
Used 5 failing and 5 passing test cases from Avicenna in the validation
In total 10 for fault localization and 10 for validation.
The gathering of test cases took 2.7733 seconds.
The repair ran for 680.2941 seconds.
The evaluation took 61.2245 seconds.
Was a valid patch found: False
BEST FITNESS: 0.24181818181818182
BEST F1 SCORE: 0.25
Found a total of 1 patches.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

PATCHES (SORTED):
GeneticCandidate@tmp/markup_2(5)[0.24]
---------- Evaluation Matrix ----------
STILL PASSING: [23/50]
NOW FAILING: [27/50]
NOW PASSING: [11/50]
STILL FAILING: [39/50]
PRECISION: 0.2894736842105263
RECALL: 0.22
ACCURACY: 0.34
F1 SCORE: 0.25
---------------------------------------
--- src/markup/__init__.py
+++ src/markup/__init__.py
@@ -1,16 +1,22 @@
 def remove_html_markup(s):
     tag = True
     quote = False
-    out = ""
-
+    out = ''
     for c in s:
-        if c == "<" and not quote:
+        if c == '<' and (not quote):
             tag = True
-        elif c == ">" and not quote:
+        elif c == '>' and (not quote):
             tag = False
-        elif (c == '"' or c == "'") and tag:  # <-- FIX
+        elif (c == '"' or c == "'") and tag:
             quote = not quote
         elif not tag:
             out = out + c
-
-    return out
+    if c == '<' and (not quote):
+        tag = True
+    elif c == '>' and (not quote):
+        tag = False
+    elif (c == '"' or c == "'") and tag:
+        quote = not quote
+    elif not tag:
+        out = out + c
+    return out

____________________________________________________________________________________________________

