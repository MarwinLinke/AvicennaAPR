APPROACH: PyGenProg
SUBJECT: markup_1
Used 1 failing and 10 passing test cases from Tests4py in the fault localization
Used 1 failing and 10 passing test cases from Tests4py in the validation
In total 11 for fault localization and 11 for validation.
The gathering of test cases took 5.3665 seconds.
The repair ran for 446.4313 seconds.
The evaluation took 93.4213 seconds.
Was a valid patch found: False
BEST FITNESS: 0.45454545454545453
BEST F1 SCORE: 0.5714285714285715
Found a total of 4 patches.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

PATCHES (SORTED):
GeneticCandidate@tmp/markup_1(2)[0.45]
---------- Evaluation Matrix ----------
STILL PASSING: [50/50]
NOW FAILING: [0/50]
NOW PASSING: [20/50]
STILL FAILING: [30/50]
PRECISION: 1.0
RECALL: 0.4
ACCURACY: 0.7
F1 SCORE: 0.5714285714285715
---------------------------------------
--- src/markup/__init__.py
+++ src/markup/__init__.py
@@ -1,16 +1,14 @@
 def remove_html_markup(s):
     tag = False
     quote = False
-    out = ""
-
+    out = ''
     for c in s:
-        if c == "<" and not quote:
+        if c == '<' and (not quote):
             tag = True
-        elif c == ">" and not quote:
+        elif c == '>' and (not quote):
             tag = False
-        elif c == '"' or c == "'" and tag:
-            quote = not quote
+        elif c == '"' or (c == "'" and tag):
+            pass
         elif not tag:
             out = out + c
-
-    return out
+    return out

____________________________________________________________________________________________________

GeneticCandidate@tmp/markup_1(0)[0.36]
---------- Evaluation Matrix ----------
STILL PASSING: [50/50]
NOW FAILING: [0/50]
NOW PASSING: [15/50]
STILL FAILING: [35/50]
PRECISION: 1.0
RECALL: 0.3
ACCURACY: 0.65
F1 SCORE: 0.4615384615384615
---------------------------------------
Patch could not be printed.

____________________________________________________________________________________________________

GeneticCandidate@tmp/markup_1(1)[0.36]
---------- Evaluation Matrix ----------
STILL PASSING: [50/50]
NOW FAILING: [0/50]
NOW PASSING: [15/50]
STILL FAILING: [35/50]
PRECISION: 1.0
RECALL: 0.3
ACCURACY: 0.65
F1 SCORE: 0.4615384615384615
---------------------------------------
--- src/markup/__init__.py
+++ src/markup/__init__.py
@@ -1,16 +1,15 @@
 def remove_html_markup(s):
     tag = False
+    tag = False
     quote = False
-    out = ""
-
+    out = ''
     for c in s:
-        if c == "<" and not quote:
+        if c == '<' and (not quote):
             tag = True
-        elif c == ">" and not quote:
+        elif c == '>' and (not quote):
             tag = False
-        elif c == '"' or c == "'" and tag:
+        elif c == '"' or (c == "'" and tag):
             quote = not quote
         elif not tag:
             out = out + c
-
-    return out
+    return out

____________________________________________________________________________________________________

GeneticCandidate@tmp/markup_1(2)[0.36]
---------- Evaluation Matrix ----------
STILL PASSING: [50/50]
NOW FAILING: [0/50]
NOW PASSING: [15/50]
STILL FAILING: [35/50]
PRECISION: 1.0
RECALL: 0.3
ACCURACY: 0.65
F1 SCORE: 0.4615384615384615
---------------------------------------
--- src/markup/__init__.py
+++ src/markup/__init__.py
@@ -1,16 +1,17 @@
 def remove_html_markup(s):
     tag = False
     quote = False
-    out = ""
-
+    out = ''
     for c in s:
-        if c == "<" and not quote:
+        if c == '<' and (not quote):
             tag = True
-        elif c == ">" and not quote:
+        elif c == '>' and (not quote):
             tag = False
-        elif c == '"' or c == "'" and tag:
-            quote = not quote
+        elif c == '"' or (c == "'" and tag):
+            if c == '"' or (c == "'" and tag):
+                quote = not quote
+            elif not tag:
+                out = out + c
         elif not tag:
             out = out + c
-
-    return out
+    return out

____________________________________________________________________________________________________

