APPROACH: PyGenProg
SUBJECT: markup_2
Used 30 failing and 30 passing test cases from Avicenna in the fault localization
Used 30 failing and 30 passing test cases from Avicenna in the validation
In total 60 for fault localization and 60 for validation.
The gathering of test cases took 2.4738 seconds.
The repair ran for 303.6116 seconds.
The evaluation took 57.3927 seconds.
Was a valid patch found: False
BEST FITNESS: 0.12545454545454546
BEST F1 SCORE: 0.11627906976744186
Found a total of 1 patches.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

PATCHES (SORTED):
GeneticCandidate@tmp/markup_2(1)[0.13] Found 1 equivalent patches.
---------- Evaluation Matrix ----------
STILL PASSING: [19/50]
NOW FAILING: [31/50]
NOW PASSING: [5/50]
STILL FAILING: [45/50]
PRECISION: 0.1388888888888889
RECALL: 0.1
ACCURACY: 0.24
F1 SCORE: 0.11627906976744186
---------------------------------------
--- src/markup/__init__.py
+++ src/markup/__init__.py
@@ -1,16 +1,23 @@
 def remove_html_markup(s):
     tag = True
     quote = False
-    out = ""
-
+    out = ''
     for c in s:
-        if c == "<" and not quote:
+        if c == '<' and (not quote):
             tag = True
-        elif c == ">" and not quote:
+        elif c == '>' and (not quote):
             tag = False
-        elif (c == '"' or c == "'") and tag:  # <-- FIX
+        elif (c == '"' or c == "'") and tag:
             quote = not quote
         elif not tag:
             out = out + c
-
-    return out
+    for c in s:
+        if c == '<' and (not quote):
+            tag = True
+        elif c == '>' and (not quote):
+            tag = False
+        elif (c == '"' or c == "'") and tag:
+            quote = not quote
+        elif not tag:
+            out = out + c
+    return out

____________________________________________________________________________________________________

