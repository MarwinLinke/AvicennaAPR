APPROACH: PyGenProg
SUBJECT: markup_2
Used 50 failing and 50 passing test cases from Avicenna in the fault localization
Used 50 failing and 50 passing test cases from Avicenna in the validation
In total 100 for fault localization and 100 for validation.
The gathering of test cases took 3.0762 seconds.
The repair ran for 470.4489 seconds.
The evaluation took 74.2624 seconds.
Was a valid patch found: False
BEST FITNESS: 0.1618181818181818
BEST F1 SCORE: 0.1590909090909091
Found a total of 1 patches.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

PATCHES (SORTED):
GeneticCandidate@tmp/markup_2(1)[0.16] Found 1 equivalent patches.
---------- Evaluation Matrix ----------
STILL PASSING: [19/50]
NOW FAILING: [31/50]
NOW PASSING: [7/50]
STILL FAILING: [43/50]
PRECISION: 0.18421052631578946
RECALL: 0.14
ACCURACY: 0.26
F1 SCORE: 0.1590909090909091
---------------------------------------
--- src/markup/__init__.py
+++ src/markup/__init__.py
@@ -1,16 +1,23 @@
 def remove_html_markup(s):
     tag = True
     quote = False
-    out = ""
-
     for c in s:
-        if c == "<" and not quote:
+        if c == '<' and (not quote):
             tag = True
-        elif c == ">" and not quote:
+        elif c == '>' and (not quote):
             tag = False
-        elif (c == '"' or c == "'") and tag:  # <-- FIX
+        elif (c == '"' or c == "'") and tag:
             quote = not quote
         elif not tag:
             out = out + c
-
-    return out
+    out = ''
+    for c in s:
+        if c == '<' and (not quote):
+            tag = True
+        elif c == '>' and (not quote):
+            tag = False
+        elif (c == '"' or c == "'") and tag:
+            quote = not quote
+        elif not tag:
+            out = out + c
+    return out

____________________________________________________________________________________________________

